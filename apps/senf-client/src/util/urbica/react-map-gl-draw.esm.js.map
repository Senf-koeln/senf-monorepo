{"version":3,"file":"react-map-gl-draw.esm.js","sources":["../node_modules/@mapbox/mapbox-gl-draw/src/lib/theme.js","../src/components/Draw/index.js"],"sourcesContent":["export default [\n  {\n    'id': 'gl-draw-polygon-fill-inactive',\n    'type': 'fill',\n    'filter': ['all',\n      ['==', 'active', 'false'],\n      ['==', '$type', 'Polygon'],\n      ['!=', 'mode', 'static']\n    ],\n    'paint': {\n      'fill-color': '#3bb2d0',\n      'fill-outline-color': '#3bb2d0',\n      'fill-opacity': 0.1\n    }\n  },\n  {\n    'id': 'gl-draw-polygon-fill-active',\n    'type': 'fill',\n    'filter': ['all', ['==', 'active', 'true'], ['==', '$type', 'Polygon']],\n    'paint': {\n      'fill-color': '#fbb03b',\n      'fill-outline-color': '#fbb03b',\n      'fill-opacity': 0.1\n    }\n  },\n  {\n    'id': 'gl-draw-polygon-midpoint',\n    'type': 'circle',\n    'filter': ['all',\n      ['==', '$type', 'Point'],\n      ['==', 'meta', 'midpoint']],\n    'paint': {\n      'circle-radius': 3,\n      'circle-color': '#fbb03b'\n    }\n  },\n  {\n    'id': 'gl-draw-polygon-stroke-inactive',\n    'type': 'line',\n    'filter': ['all',\n      ['==', 'active', 'false'],\n      ['==', '$type', 'Polygon'],\n      ['!=', 'mode', 'static']\n    ],\n    'layout': {\n      'line-cap': 'round',\n      'line-join': 'round'\n    },\n    'paint': {\n      'line-color': '#3bb2d0',\n      'line-width': 2\n    }\n  },\n  {\n    'id': 'gl-draw-polygon-stroke-active',\n    'type': 'line',\n    'filter': ['all', ['==', 'active', 'true'], ['==', '$type', 'Polygon']],\n    'layout': {\n      'line-cap': 'round',\n      'line-join': 'round'\n    },\n    'paint': {\n      'line-color': '#fbb03b',\n      'line-dasharray': [0.2, 2],\n      'line-width': 2\n    }\n  },\n  {\n    'id': 'gl-draw-line-inactive',\n    'type': 'line',\n    'filter': ['all',\n      ['==', 'active', 'false'],\n      ['==', '$type', 'LineString'],\n      ['!=', 'mode', 'static']\n    ],\n    'layout': {\n      'line-cap': 'round',\n      'line-join': 'round'\n    },\n    'paint': {\n      'line-color': '#3bb2d0',\n      'line-width': 2\n    }\n  },\n  {\n    'id': 'gl-draw-line-active',\n    'type': 'line',\n    'filter': ['all',\n      ['==', '$type', 'LineString'],\n      ['==', 'active', 'true']\n    ],\n    'layout': {\n      'line-cap': 'round',\n      'line-join': 'round'\n    },\n    'paint': {\n      'line-color': '#fbb03b',\n      'line-dasharray': [0.2, 2],\n      'line-width': 2\n    }\n  },\n  {\n    'id': 'gl-draw-polygon-and-line-vertex-stroke-inactive',\n    'type': 'circle',\n    'filter': ['all',\n      ['==', 'meta', 'vertex'],\n      ['==', '$type', 'Point'],\n      ['!=', 'mode', 'static']\n    ],\n    'paint': {\n      'circle-radius': 5,\n      'circle-color': '#fff'\n    }\n  },\n  {\n    'id': 'gl-draw-polygon-and-line-vertex-inactive',\n    'type': 'circle',\n    'filter': ['all',\n      ['==', 'meta', 'vertex'],\n      ['==', '$type', 'Point'],\n      ['!=', 'mode', 'static']\n    ],\n    'paint': {\n      'circle-radius': 3,\n      'circle-color': '#fbb03b'\n    }\n  },\n  {\n    'id': 'gl-draw-point-point-stroke-inactive',\n    'type': 'circle',\n    'filter': ['all',\n      ['==', 'active', 'false'],\n      ['==', '$type', 'Point'],\n      ['==', 'meta', 'feature'],\n      ['!=', 'mode', 'static']\n    ],\n    'paint': {\n      'circle-radius': 5,\n      'circle-opacity': 1,\n      'circle-color': '#fff'\n    }\n  },\n  {\n    'id': 'gl-draw-point-inactive',\n    'type': 'circle',\n    'filter': ['all',\n      ['==', 'active', 'false'],\n      ['==', '$type', 'Point'],\n      ['==', 'meta', 'feature'],\n      ['!=', 'mode', 'static']\n    ],\n    'paint': {\n      'circle-radius': 3,\n      'circle-color': '#3bb2d0'\n    }\n  },\n  {\n    'id': 'gl-draw-point-stroke-active',\n    'type': 'circle',\n    'filter': ['all',\n      ['==', '$type', 'Point'],\n      ['==', 'active', 'true'],\n      ['!=', 'meta', 'midpoint']\n    ],\n    'paint': {\n      'circle-radius': 7,\n      'circle-color': '#fff'\n    }\n  },\n  {\n    'id': 'gl-draw-point-active',\n    'type': 'circle',\n    'filter': ['all',\n      ['==', '$type', 'Point'],\n      ['!=', 'meta', 'midpoint'],\n      ['==', 'active', 'true']],\n    'paint': {\n      'circle-radius': 5,\n      'circle-color': '#fbb03b'\n    }\n  },\n  {\n    'id': 'gl-draw-polygon-fill-static',\n    'type': 'fill',\n    'filter': ['all', ['==', 'mode', 'static'], ['==', '$type', 'Polygon']],\n    'paint': {\n      'fill-color': '#404040',\n      'fill-outline-color': '#404040',\n      'fill-opacity': 0.1\n    }\n  },\n  {\n    'id': 'gl-draw-polygon-stroke-static',\n    'type': 'line',\n    'filter': ['all', ['==', 'mode', 'static'], ['==', '$type', 'Polygon']],\n    'layout': {\n      'line-cap': 'round',\n      'line-join': 'round'\n    },\n    'paint': {\n      'line-color': '#404040',\n      'line-width': 2\n    }\n  },\n  {\n    'id': 'gl-draw-line-static',\n    'type': 'line',\n    'filter': ['all', ['==', 'mode', 'static'], ['==', '$type', 'LineString']],\n    'layout': {\n      'line-cap': 'round',\n      'line-join': 'round'\n    },\n    'paint': {\n      'line-color': '#404040',\n      'line-width': 2\n    }\n  },\n  {\n    'id': 'gl-draw-point-static',\n    'type': 'circle',\n    'filter': ['all', ['==', 'mode', 'static'], ['==', '$type', 'Point']],\n    'paint': {\n      'circle-radius': 5,\n      'circle-color': '#404040'\n    }\n  }\n];\n","// @flow\n\nimport * as React from 'react';\nimport { MapContext } from '@urbica/react-map-gl';\nimport MapboxDraw from '@mapbox/mapbox-gl-draw';\nimport theme from '@mapbox/mapbox-gl-draw/src/lib/theme';\n\nconst modes = MapboxDraw.modes;\n\nexport type Props = {\n  /** Draw controls position */\n  position?: 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right',\n\n  /** Whether or not to enable keyboard interactions for drawing. */\n  keybindings?: boolean,\n\n  /** Whether or not to enable touch interactions for drawing. */\n  touchEnabled?: boolean,\n\n  /**\n   * Whether or not to enable box selection of features with shift+click+drag.\n   * If false, shift+click+drag zooms into an area.\n   */\n  boxSelect?: boolean,\n\n  /**\n   * Number of pixels around any feature or vertex (in every direction)\n   * that will respond to a click.\n   */\n  clickBuffer?: number,\n\n  /**\n   * Number of pixels around any feature of vertex (in every direction)\n   * that will respond to a touch.\n   */\n  touchBuffer?: number,\n\n  /** Hide or show Point Control. */\n  pointControl?: boolean,\n\n  /** Hide or show Line String Control. */\n  lineStringControl?: boolean,\n\n  /** Hide or show Polygon Control. */\n  polygonControl?: boolean,\n\n  /** Hide or show Trash Control. */\n  trashControl?: boolean,\n\n  /** Hide or show Combine Features Control. */\n  combineFeaturesControl?: boolean,\n\n  /** Hide or show Uncombine Features Control. */\n  uncombineFeaturesControl?: boolean,\n\n  /**\n   *  The default value for controls. For example, if you would like all\n   *  controls to be off by default, and specify a whitelist with controls,\n   *  use displayControlsDefault: false.\n   */\n  displayControlsDefault?: boolean,\n\n  /** An array of map style objects. */\n  styles?: Array<Object>,\n\n  /**\n   * Over ride the default modes with your own.\n   * Can accepts a function. That function will receive the default modes as the\n   * first argument\n   */\n  modes?: Object | Function,\n\n  /** The mode that will used. */\n  mode?: String,\n\n  /** The mode options. */\n  modeOptions?: Object,\n\n  /**\n   * Properties of a feature will also be available for styling\n   * and prefixed with user_, e.g., ['==', 'user_custom_label', 'Example']\n   */\n  userProperties?: boolean,\n\n  /** Valid geoJSON to edit with Draw. */\n  data?: Object,\n\n  /**\n   * Fired when a feature is created.\n   * The following interactions will trigger this event:\n   * • Finish drawing a feature. Simply clicking will create a Point.\n   *   A LineString or Polygon is only created when the user\n   *   has finished drawing it — i.e. double-clicked the last vertex\n   *   or hit Enter — and the drawn feature is valid.\n   */\n  onDrawCreate?: Function,\n\n  /**\n   * Fired when one or more features are deleted.\n   * The following interactions will trigger this event:\n   * • Click the trash button when one or more features are selected\n   *   in simple_select mode.\n   * • Hit the Backspace or Delete keys when one or features are selected\n   *   in simple_select mode.\n   * • Invoke draw.trash() when you have a feature selected in\n   *   simple_select mode.\n   */\n  onDrawDelete?: Function,\n\n  /**\n   * Fired when features are combined. The following interactions will\n   * trigger this event:\n   * • Click the Combine button when more than one features are selected\n   *   in simple_select mode.\n   * • Invoke draw.combineFeatures() when more than one features are selected\n   *   in simple_select mode.\n   */\n  onDrawCombine?: Function,\n\n  /**\n   * Fired when features are uncombined. The following interactions will\n   * trigger this event:\n   * • Click the Uncombine button when one or more multifeatures are selected\n   *   in simple_select mode. Non-multifeatures may also be selected.\n   * • Invoke draw.uncombineFeatures() when one or more multifeatures are\n   *   selected in simple_select mode. Non-multifeatures may also be selected.\n   */\n  onDrawUncombine?: Function,\n\n  /**\n   * Fired when one or more features are updated. The following interactions\n   * will trigger this event, which can be subcategorized by action:\n   * • `action: 'move'`\n   *   • Finish moving one or more selected features in `simple_select` mode.\n   *      The event will only fire when the movement is finished\n   *      (i.e. when the user releases the mouse button or hits Enter).\n   * • `action: 'change_coordinates'`\n   *   • Finish moving one or more vertices of a selected feature in\n   *     `direct_select` mode. The event will only fire when the movement\n   *     is finished (i.e. when the user releases the mouse button or\n   *     hits Enter, or her mouse leaves the map container).\n   *   • Delete one or more vertices of a selected feature in `direct_select`\n   *     mode, which can be done by hitting the Backspace or Delete keys,\n   *     clicking the Trash button, or invoking draw.trash().\n   *   • Add a vertex to the selected feature by clicking a midpoint on that\n   *     feature in direct_select mode.\n   * This event will not fire when a feature is created or deleted. To track\n   * those interactions, listen for draw.create and draw.delete events.\n   */\n  onDrawUpdate?: Function,\n\n  /**\n   * Fired when the selection is changed (i.e. one or more features are selected\n   * or deselected). The following interactions will trigger this event:\n   * • Click on a feature to select it.\n   * • When a feature is already selected, shift-click on another feature to add\n   *   it to the selection.\n   * • Click on a vertex to select it.\n   * • When a vertex is already selected, shift-click on another vertex to add\n   *   it to the selection.\n   * • Create a box-selection that includes at least one feature.\n   * • Click outside the selected feature(s) to deselect.\n   * • Click away from the selected vertex(s) to deselect.\n   * • Finish drawing a feature (features are selected just after they are\n   *   created).\n   * • When a feature is already selected, invoke draw.changeMode() such that\n   *   the feature becomes deselected.\n   * • Use `draw.changeMode('simple_select', { featureIds: [..] })` to switch to\n   *   `simple_select` mode and immediately select the specified features.\n   * • Use `draw.delete`, `draw.deleteAll` or `draw.trash` to delete feature(s).\n   */\n  onDrawSelectionChange?: Function,\n\n  /**\n   * Fired when the mode is changed. The following interactions will trigger\n   * this event:\n   * • Click the point, line, or polygon buttons to begin drawing (enter a\n   *   `draw_*` mode).\n   * • Finish drawing a feature (enter `simple_select` mode).\n   * • While in `simple_select` mode, click on an already selected feature\n   *   (enter `direct_select` mode).\n   * • While in `direct_select` mode, click outside all features (enter\n   *   `simple_select` mode).\n   * This event is fired just after the current mode stops and just before\n   * the next mode starts. A render will not happen until after all event\n   * handlers have been triggered, so you can force a mode redirect by calling\n   * `draw.changeMode()` inside a `draw.modechange` handler.\n   */\n  onDrawModeChange?: Function,\n\n  /**\n   * Fired just after Draw calls `setData()` on the Mapbox GL JS map. This does\n   * not imply that the set data call has finished updating the map, just that\n   * the map is being updated.\n   */\n  onDrawRender?: Function,\n\n  /**\n   * Fired as the state of Draw changes to enable and disable different actions.\n   * Following this event will enable you know if `draw.trash()`,\n   * `draw.combineFeatures()` and draw.uncombineFeatures() will have an effect.\n   */\n  onDrawActionable?: Function,\n\n  /**\n   * Fired when features are changed. (`draw.create`, `draw.delete`,\n   * `draw.combine`, `draw.uncombine`, `draw.update`).\n   */\n  onChange?: Function\n};\n\nclass Draw extends React.PureComponent<Props> {\n  static defaultProps = {\n    position: 'top-right',\n    keybindings: true,\n    touchEnabled: true,\n    boxSelect: true,\n    clickBuffer: 2,\n    touchBuffer: 25,\n    pointControl: true,\n    lineStringControl: true,\n    polygonControl: true,\n    trashControl: true,\n    combineFeaturesControl: true,\n    uncombineFeaturesControl: true,\n    displayControlsDefault: true,\n    styles: theme,\n    modes,\n    mode: 'simple_select',\n    modeOptions: {},\n    userProperties: false,\n    data: null,\n    onDrawCreate: null,\n    onDrawDelete: null,\n    onDrawCombine: null,\n    onDrawUncombine: null,\n    onDrawUpdate: null,\n    onDrawSelectionChange: null,\n    onDrawModeChange: null,\n    onDrawRender: null,\n    onDrawActionable: null,\n    onChange: null\n  };\n\n  componentDidMount() {\n    this._createControl();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.data) {\n      // $FlowFixMe\n      this._draw.set(this.props.data);\n    }\n\n    if (prevProps.position !== this.props.position) {\n      this._removeControl()\n      this._createControl();\n    }\n\n    if (prevProps.mode !== this.props.mode) {\n      // $FlowFixMe\n      this._draw.changeMode(this.props.mode, this.props.modeOptions);\n    }\n  }\n\n  componentWillUnmount(): void {\n    this._removeControl()\n  }\n\n  getDraw() {\n    // $FlowFixMe\n    return this._draw;\n  }\n\n  _createControl = () => {\n    // $FlowFixMe\n    const map = this._map;\n    // $FlowFixMe\n    this._draw = new MapboxDraw({\n      keybindings: this.props.keybindings,\n      touchEnabled: this.props.touchEnabled,\n      boxSelect: this.props.boxSelect,\n      clickBuffer: this.props.clickBuffer,\n      touchBuffer: this.props.touchBuffer,\n      controls: {\n        point: this.props.pointControl,\n        line_string: this.props.lineStringControl,\n        polygon: this.props.polygonControl,\n        trash: this.props.trashControl,\n        combine_features: this.props.combineFeaturesControl,\n        uncombine_features: this.props.uncombineFeaturesControl\n      },\n      displayControlsDefault: this.props.displayControlsDefault,\n      styles: this.props.styles,\n      modes: typeof this.props.modes === 'function'\n        ? this.props.modes(this.constructor.defaultProps.modes)\n        : this.props.modes,\n      defaultMode: this.props.mode,\n      userProperties: this.props.userProperties\n    });\n\n    map.addControl(this._draw, this.props.position);\n    map.on('draw.create', this._onDrawCreate);\n    map.on('draw.create', this._onChange);\n    map.on('draw.delete', this._onDrawDelete);\n    map.on('draw.delete', this._onChange);\n    map.on('draw.combine', this._onDrawCombine);\n    map.on('draw.combine', this._onChange);\n    map.on('draw.uncombine', this._onDrawUncombine);\n    map.on('draw.uncombine', this._onChange);\n    map.on('draw.update', this._onDrawUpdate);\n    map.on('draw.update', this._onChange);\n    map.on('draw.selectionchange', this._onDrawSelectionchange);\n    map.on('draw.modechange', this._onDrawModechange);\n    map.on('draw.render', this._onDrawRender);\n    map.on('draw.actionable', this._onDrawActionable);\n\n    if (this.props.data) {\n      // $FlowFixMe\n      this._draw.add(this.props.data);\n    }\n  };\n\n  _removeControl = () => {\n    // $FlowFixMe\n    const map = this._map;\n\n    if (!map || !map.getStyle()) {\n      return;\n    }\n\n    map.off('draw.create', this._onDrawCreate);\n    map.off('draw.create', this._onChange);\n    map.off('draw.delete', this._onDrawDelete);\n    map.off('draw.delete', this._onChange);\n    map.off('draw.combine', this._onDrawCombine);\n    map.off('draw.combine', this._onChange);\n    map.off('draw.uncombine', this._onDrawUncombine);\n    map.off('draw.uncombine', this._onChange);\n    map.off('draw.update', this._onDrawUpdate);\n    map.off('draw.update', this._onChange);\n    map.off('draw.selectionchange', this._onDrawSelectionchange);\n    map.off('draw.modechange', this._onDrawModechange);\n    map.off('draw.render', this._onDrawRender);\n    map.off('draw.actionable', this._onDrawActionable);\n\n    // $FlowFixMe\n    map.removeControl(this._draw);\n  }\n\n  _onChange = () => {\n    const { onChange } = this.props;\n\n    if (onChange) {\n      // $FlowFixMe\n      const allFeatures = this._draw.getAll();\n      onChange(allFeatures);\n    }\n  };\n\n  _onDrawCreate = (event: Object) => {\n    if (this.props.onDrawCreate) {\n      this.props.onDrawCreate(event);\n    }\n  };\n\n  _onDrawDelete = (event: Object) => {\n    if (this.props.onDrawDelete) {\n      this.props.onDrawDelete(event);\n    }\n  };\n\n  _onDrawCombine = (event: Object) => {\n    if (this.props.onDrawCombine) {\n      this.props.onDrawCombine(event);\n    }\n  };\n\n  _onDrawUncombine = (event: Object) => {\n    if (this.props.onDrawUncombine) {\n      this.props.onDrawUncombine(event);\n    }\n  };\n\n  _onDrawUpdate = (event: Object) => {\n    if (this.props.onDrawUpdate) {\n      this.props.onDrawUpdate(event);\n    }\n  };\n\n  _onDrawSelectionchange = (event: Object) => {\n    if (this.props.onDrawSelectionChange) {\n      this.props.onDrawSelectionChange(event);\n    }\n  };\n\n  _onDrawModechange = (event: Object) => {\n    if (this.props.onDrawModeChange) {\n      this.props.onDrawModeChange(event);\n    }\n  };\n\n  _onDrawRender = (event: Object) => {\n    if (this.props.onDrawRender) {\n      this.props.onDrawRender(event);\n    }\n  };\n\n  _onDrawActionable = (event: Object) => {\n    if (this.props.onDrawActionable) {\n      this.props.onDrawActionable(event);\n    }\n  };\n\n  render() {\n    return React.createElement(MapContext.Consumer, {}, (map) => {\n      if (map) {\n        // $FlowFixMe\n        this._map = map;\n      }\n      return null;\n    });\n  }\n}\n\nexport default Draw;\n"],"names":["modes","MapboxDraw","Draw","React","map","_map","_draw","keybindings","props","touchEnabled","boxSelect","clickBuffer","touchBuffer","controls","point","pointControl","line_string","lineStringControl","polygon","polygonControl","trash","trashControl","combine_features","combineFeaturesControl","uncombine_features","uncombineFeaturesControl","displayControlsDefault","styles","constructor","defaultProps","defaultMode","mode","userProperties","addControl","position","on","_onDrawCreate","_onChange","_onDrawDelete","_onDrawCombine","_onDrawUncombine","_onDrawUpdate","_onDrawSelectionchange","_onDrawModechange","_onDrawRender","_onDrawActionable","data","add","getStyle","off","removeControl","onChange","allFeatures","getAll","event","onDrawCreate","onDrawDelete","onDrawCombine","onDrawUncombine","onDrawUpdate","onDrawSelectionChange","onDrawModeChange","onDrawRender","onDrawActionable","componentDidMount","_createControl","componentDidUpdate","prevProps","set","_removeControl","changeMode","modeOptions","componentWillUnmount","getDraw","render","MapContext","Consumer","theme"],"mappings":"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"}