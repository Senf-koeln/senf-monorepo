{"version":3,"file":"react-map-gl.esm.js","sources":["../src/components/MapContext/index.js","../src/utils/mapbox-gl.js","../src/components/MapGL/events.js","../src/utils/capitalizeFirstLetter.js","../src/utils/isArraysEqual.js","../src/utils/diff.js","../src/utils/queryRenderedFeatures.js","../src/components/Layer/index.js","../src/components/CustomLayer/index.js","../src/utils/normalizeChildren.js","../src/components/MapGL/index.js","../src/utils/validateSource.js","../src/components/Source/index.js","../src/components/Popup/index.js","../src/components/Marker/index.js","../src/components/FeatureState/index.js","../src/components/Image/index.js","../src/components/AttributionControl/index.js","../src/components/FullscreenControl/index.js","../src/components/GeolocateControl/index.js","../src/components/NavigationControl/index.js","../src/components/ScaleControl/index.js","../node_modules/@mapbox/mapbox-gl-language/index.js","../src/components/LanguageControl/index.js","../node_modules/@mapbox/mapbox-gl-traffic/mapbox-gl-traffic.js","../src/components/TrafficControl/index.js","../src/components/Filter/index.js"],"sourcesContent":["// @flow\n\nimport { createContext } from 'react';\nimport type { Context } from 'react';\nimport type MapboxMap from 'mapbox-gl/src/ui/map';\n\nconst MapContext: Context<?MapboxMap> = createContext(null);\n\nexport default MapContext;\n","/* // @flow\nimport type MapboxGLTypes from \"mapbox-gl/src/index\"; */\nimport map from 'mapbox-gl';\n const isBrowser =\n  typeof window !== \"undefined\" && typeof window.document !== \"undefined\";\n\n\n let mapboxgl=null;\n mapboxgl = isBrowser ? mapboxgl=map:null\nexport default mapboxgl\n","// @flow\n\nconst events = [\n  'resize',\n  'remove',\n  'mousedown',\n  'mouseup',\n  'mouseover',\n  'mousemove',\n  'click',\n  'dblclick',\n  'mouseenter',\n  'mouseleave',\n  'mouseout',\n  'contextmenu',\n  'touchstart',\n  'touchend',\n  'touchmove',\n  'touchcancel',\n  'movestart',\n  'move',\n  'moveend',\n  'dragstart',\n  'drag',\n  'dragend',\n  'zoomstart',\n  'zoom',\n  'zoomend',\n  'rotatestart',\n  'rotate',\n  'rotateend',\n  'pitchstart',\n  'pitch',\n  'pitchend',\n  'boxzoomstart',\n  'boxzoomend',\n  'boxzoomcancel',\n  'webglcontextlost',\n  'webglcontextrestored',\n  'load',\n  'error',\n  'data',\n  'styledata',\n  'sourcedata',\n  'dataloading',\n  'styledataloading',\n  'sourcedataloading'\n];\n\nmodule.exports = events;\n","// @flow\n\nfunction capitalizeFirstLetter(string: string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nmodule.exports = capitalizeFirstLetter;\n","const isArraysEqual = (arr1 = [], arr2 = []) => {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n\n  for (let index = 0; index < arr1.length; index += 1) {\n    if (arr1[index] !== arr2[index]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nexport default isArraysEqual;\n","// @flow\n\ntype KV = {\n  [string]: any\n};\n\nconst diff = (newProps: KV = {}, prevProps: KV = {}) => {\n  const keys = new Set([...Object.keys(newProps), ...Object.keys(prevProps)]);\n  return [...keys].reduce((acc, key: string) => {\n    const value = newProps[key];\n    if (value !== prevProps[key]) {\n      acc.push([key, value]);\n    }\n    return acc;\n  }, []);\n};\n\nexport default diff;\n","// @flow\nimport type MapboxMap from 'mapbox-gl/src/ui/map';\n\nconst queryRenderedFeatures = (\n  map: MapboxMap,\n  layerId: string,\n  position: [number, number],\n  radius: number\n) => {\n  const parameters = { layers: [layerId] };\n\n  if (radius) {\n    const bbox = [\n      [position[0] - radius, position[1] - radius],\n      [position[0] + radius, position[1] + radius]\n    ];\n\n    return map.queryRenderedFeatures(bbox, parameters);\n  }\n\n  return map.queryRenderedFeatures(position, parameters);\n};\n\nexport default queryRenderedFeatures;\n","// @flow\n\nimport { PureComponent, createElement } from 'react';\nimport type MapboxMap from 'mapbox-gl/src/ui/map';\nimport type GeoJSONFeature from 'mapbox-gl/src/util/vectortile_to_geojson';\nimport type { LayerSpecification } from 'mapbox-gl/src/style-spec/types';\nimport type { MapMouseEvent, MapTouchEvent } from 'mapbox-gl/src/ui/events';\n\nimport MapContext from '../MapContext';\nimport diff from '../../utils/diff';\nimport queryRenderedFeatures from '../../utils/queryRenderedFeatures';\n\nconst eventListeners = [\n  ['onClick', 'click'],\n  ['onHover', 'mousemove'],\n  ['onEnter', 'mouseenter'],\n  ['onLeave', 'mouseleave']\n];\n\ntype InteractionEvent = { ...MapMouseEvent, features?: GeoJSONFeature[] };\n\ntype Props = {|\n  /** Mapbox GL Layer id */\n  id: string,\n\n  /** The id of an existing layer to insert the new layer before. */\n  before?: string,\n\n  /**\n   * Called when the layer is clicked.\n   * @callback\n   * @param {Object} event - The mouse event.\n   * @param {[Number, Number]} event.lngLat - The coordinates of the pointer\n   * @param {Array} event.features - The features under the pointer,\n   * using Mapbox's queryRenderedFeatures API:\n   * https://www.mapbox.com/mapbox-gl-js/api/#Map#queryRenderedFeatures\n   */\n  onClick?: (event: InteractionEvent) => any,\n\n  /**\n   * Called when the layer is hovered over.\n   * @callback\n   * @param {Object} event - The mouse event.\n   * @param {[Number, Number]} event.lngLat - The coordinates of the pointer\n   * @param {Array} event.features - The features under the pointer,\n   * using Mapbox's queryRenderedFeatures API:\n   * https://www.mapbox.com/mapbox-gl-js/api/#Map#queryRenderedFeatures\n   */\n  onHover?: (event: InteractionEvent) => any,\n\n  /**\n   * Called when the layer feature is entered.\n   * @callback\n   * @param {Object} event - The mouse event.\n   * @param {[Number, Number]} event.lngLat - The coordinates of the pointer\n   * @param {Array} event.features - The features under the pointer,\n   * using Mapbox's queryRenderedFeatures API:\n   * https://www.mapbox.com/mapbox-gl-js/api/#Map#queryRenderedFeatures\n   */\n  onEnter?: (event: InteractionEvent) => any,\n\n  /**\n   * Called when the layer feature is leaved.\n   * @callback\n   * @param {Object} event - The mouse event.\n   * @param {[Number, Number]} event.lngLat - The coordinates of the pointer\n   * @param {Array} event.features - The features under the pointer,\n   * using Mapbox's queryRenderedFeatures API:\n   * https://www.mapbox.com/mapbox-gl-js/api/#Map#queryRenderedFeatures\n   */\n  onLeave?: (event: InteractionEvent) => any,\n\n  /**\n   * Radius to detect features around a clicked/hovered point\n   */\n  radius: number,\n\n  ...LayerSpecification\n|};\n\nclass Layer extends PureComponent<Props> {\n  $key: string;\n\n  $value: any;\n\n  _id: string;\n\n  _map: MapboxMap;\n\n  _onClick: (event: MapMouseEvent | MapTouchEvent) => void;\n\n  _onHover: (event: MapMouseEvent) => void;\n\n  _onEnter: (event: MapMouseEvent) => void;\n\n  _onLeave: (event: MapMouseEvent) => void;\n\n  static displayName = 'Layer';\n\n  static defaultProps = {\n    radius: 0\n  };\n\n  constructor(props: Props) {\n    super(props);\n    this._id = props.id;\n  }\n\n  componentDidMount() {\n    this._addLayer(this.props);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const map = this._map;\n    const { id, before, onClick, ...layer } = this.props;\n\n    if (\n      id !== prevProps.id ||\n      this.props.type !== prevProps.type ||\n      (prevProps.type !== 'background' &&\n        (this.props.source !== prevProps.source ||\n          // $FlowFixMe\n          this.props['source-layer'] !== prevProps['source-layer']))\n    ) {\n      this._id = id;\n      this._map.removeLayer(prevProps.id);\n      this._addLayer(this.props);\n      return;\n    }\n\n    // flowlint sketchy-null-string:off\n    if (before !== prevProps.before && before && map.getLayer(before)) {\n      map.moveLayer(this._id, before);\n    }\n    // flowlint sketchy-null-string:warn\n\n    if (layer.paint !== prevProps.paint) {\n      diff(layer.paint, prevProps.paint).forEach(([key, value]) => {\n        map.setPaintProperty(this._id, key, value);\n      });\n    }\n\n    if (layer.layout !== prevProps.layout) {\n      diff(layer.layout, prevProps.layout).forEach(([key, value]) => {\n        map.setLayoutProperty(this._id, key, value);\n      });\n    }\n\n    // $FlowFixMe\n    if (layer.filter !== prevProps.filter) {\n      if (!layer.filter) {\n        map.setFilter(this._id, undefined);\n      } else {\n        map.setFilter(this._id, layer.filter);\n      }\n    }\n\n    this._updateEventListeners(prevProps, this.props);\n  }\n\n  componentWillUnmount() {\n    if (!this._map || !this._map.getStyle()) {\n      return;\n    }\n\n    this._removeEventListeners(this.props);\n\n    if (this._map.getLayer(this._id)) {\n      this._map.removeLayer(this._id);\n    }\n  }\n\n  _addLayer = (props: Props) => {\n    const map = this._map;\n    const {\n      before,\n      radius,\n      onClick,\n      onHover,\n      onEnter,\n      onLeave,\n      ...layer\n    } = props;\n\n    // flowlint sketchy-null-string:off\n    if (before && map.getLayer(before)) {\n      map.addLayer(layer, before);\n    } else {\n      map.addLayer(layer);\n    }\n    // flowlint sketchy-null-string:warn\n\n    this._addEventListeners(props);\n  };\n\n  _addEventListeners = (props: Props) => {\n    eventListeners.forEach(([propName, eventName]) => {\n      const handlerName = `_${propName}`;\n      if (props[propName]) {\n        this._map.on(eventName, this._id, this[handlerName]);\n      }\n    });\n  };\n\n  _updateEventListeners = (prevProps: Props, props: Props) => {\n    eventListeners.forEach(([propName, eventName]) => {\n      const handlerName = `_${propName}`;\n\n      if (!props[propName] && prevProps[propName]) {\n        this._map.off(eventName, this._id, this[handlerName]);\n      }\n\n      if (props[propName] && !prevProps[propName]) {\n        this._map.on(eventName, this._id, this[handlerName]);\n      }\n    });\n  };\n\n  _removeEventListeners = (props: Props) => {\n    eventListeners.forEach(([propName, eventName]) => {\n      const handlerName = `_${propName}`;\n      if (props[propName]) {\n        this._map.off(eventName, this._id, this[handlerName]);\n      }\n    });\n  };\n\n  _onClick = (event: MapMouseEvent): void => {\n    const position = [event.point.x, event.point.y];\n    const features = queryRenderedFeatures(\n      this._map,\n      this._id,\n      position,\n      this.props.radius\n    );\n\n    // $FlowFixMe\n    this.props.onClick({ ...event, features });\n  };\n\n  _onHover = (event: MapMouseEvent): void => {\n    const position = [event.point.x, event.point.y];\n    const features = queryRenderedFeatures(\n      this._map,\n      this._id,\n      position,\n      this.props.radius\n    );\n\n    // $FlowFixMe\n    this.props.onHover({ ...event, features });\n  };\n\n  _onEnter = (event: MapMouseEvent): void => {\n    const position = [event.point.x, event.point.y];\n    const features = queryRenderedFeatures(\n      this._map,\n      this._id,\n      position,\n      this.props.radius\n    );\n\n    // $FlowFixMe\n    this.props.onEnter({ ...event, features });\n  };\n\n  _onLeave = (event: MapMouseEvent) => {\n    const position: [number, number] = [event.point.x, event.point.y];\n    const features = queryRenderedFeatures(\n      this._map,\n      this._id,\n      position,\n      this.props.radius\n    );\n\n    // $FlowFixMe\n    this.props.onLeave({ ...event, features });\n  };\n\n  render() {\n    return createElement(MapContext.Consumer, {}, (map) => {\n      if (map) {\n        this._map = map;\n      }\n\n      return null;\n    });\n  }\n}\n\nexport default Layer;\n","// @flow\n\nimport { PureComponent, createElement } from 'react';\nimport type MapboxMap from 'mapbox-gl/src/ui/map';\nimport type { CustomLayerInterface } from 'mapbox-gl/src/style/style_layer/custom_style_layer';\n\nimport MapContext from '../MapContext';\n\ntype Props = {\n  /** The id of an existing layer to insert the new layer before. */\n  before?: string,\n\n  /** Mapbox GL Custom Layer instance */\n  layer: CustomLayerInterface\n};\n\n/**\n * Custom layers allow a user to render directly into the map's GL context\n * using the map's camera.\n */\nclass CustomLayer extends PureComponent<Props> {\n  _id: string;\n\n  _map: MapboxMap;\n\n  static displayName = 'CustomLayer';\n\n  componentDidMount() {\n    const { layer, before } = this.props;\n\n    if (before && this._map.getLayer(before)) {\n      this._map.addLayer(layer, before);\n    } else {\n      this._map.addLayer(layer);\n    }\n\n    this._id = layer.id;\n  }\n\n  componentWillUnmount() {\n    if (!this._map || !this._map.getStyle() || !this._map.getLayer(this._id)) {\n      return;\n    }\n\n    this._map.removeLayer(this._id);\n  }\n\n  render() {\n    return createElement(MapContext.Consumer, {}, (map) => {\n      if (map) {\n        this._map = map;\n      }\n\n      return null;\n    });\n  }\n}\n\nexport default CustomLayer;\n","// @flow\n\nimport { Children, cloneElement } from 'react';\nimport type { Element } from 'react';\n\nimport Layer from '../components/Layer';\nimport CustomLayer from '../components/CustomLayer';\nimport type { Children as MapChildren } from '../components/MapGL';\n\ntype LayerLike = Element<typeof Layer> | Element<typeof CustomLayer>;\n\nconst LayerLikeTypes = [Layer, CustomLayer];\nconst isLayerLike = (child: Element<any>) =>\n  LayerLikeTypes.includes(child.type);\n\nconst getLayerId = (child: LayerLike): string =>\n  // $FlowFixMe\n  child.props.id || child.props.layer.id;\n\nconst forEachLayer = (fn, children: MapChildren) => {\n  Children.forEach(children, (child) => {\n    if (!child) return;\n    if (isLayerLike(child)) fn(child);\n    if (child.props && child.props.children)\n      forEachLayer(fn, child.props.children);\n  });\n};\n\nconst getLayerIds = (children: MapChildren): Array<string> => {\n  const layerIds = [];\n  forEachLayer((child) => {\n    if (!child.props.before) {\n      layerIds.push(getLayerId(child));\n    }\n  }, children);\n  return layerIds;\n};\n\nconst normalizeChildren = (children: MapChildren) => {\n  const layerIds = getLayerIds(children);\n  layerIds.shift();\n\n  const traverse = (_children: MapChildren) => {\n    if (typeof _children === 'function') {\n      return _children;\n    }\n\n    return Children.map(_children, (child: Element<any>) => {\n      if (!child) {\n        return child;\n      }\n\n      if (isLayerLike(child)) {\n        const before: string = child.props.before || layerIds.shift();\n        return cloneElement(child, { before });\n      }\n\n      if (child.props && child.props.children) {\n        return cloneElement(child, {\n          children: traverse(child.props.children)\n        });\n      }\n\n      return child;\n    });\n  };\n\n  const normalizedChildren = traverse(children);\n  return normalizedChildren;\n};\n\nexport default normalizeChildren;\n","// @flow\n\nimport { PureComponent, createElement, createRef } from 'react';\nimport type { ChildrenArray, Element, ElementRef } from 'react';\nimport type MapboxMap from 'mapbox-gl/src/ui/map';\nimport type MapboxLngLatBoundsLike from 'mapbox-gl/src/geo/lng_lat_bounds';\nimport type { AnimationOptions } from 'mapbox-gl/src/ui/camera';\nimport type { StyleSpecification } from 'mapbox-gl/src/style-spec/types';\nimport type { MapMouseEvent, MapTouchEvent } from 'mapbox-gl/src/ui/events';\n\nimport MapContext from '../MapContext';\nimport mapboxgl from '../../utils/mapbox-gl';\nimport events from './events';\nimport capitalizeFirstLetter from '../../utils/capitalizeFirstLetter';\nimport isArraysEqual from '../../utils/isArraysEqual';\n\n/* eslint-disable import/no-cycle */\nimport normalizeChildren from '../../utils/normalizeChildren';\n\nimport type { EventProps } from './eventProps';\n\nexport type Viewport = {|\n  latitude: number,\n  longitude: number,\n  zoom: number,\n  pitch?: number,\n  bearing?: number\n|};\n\nexport const jumpTo = 'jumpTo';\nexport const easeTo = 'easeTo';\nexport const flyTo = 'flyTo';\n\nexport type ViewportChangeMethod = 'jumpTo' | 'easeTo' | 'flyTo';\nexport type ViewportChangeEvent = MapMouseEvent | MapTouchEvent;\n\nexport type Children = ChildrenArray<Element<any>>;\n\ntype Props = EventProps & {\n  /** container className */\n  className?: string,\n\n  /** container style */\n  style?: {\n    [CSSProperty: string]: any\n  },\n\n  /**\n   * The Mapbox style. A string url or a Mapbox GL style object.\n   */\n  mapStyle: string | StyleSpecification,\n\n  /** MapGL children as Sources, Layers, Controls, and custom Components */\n  children?: Children,\n\n  /**\n   * Mapbox API access token for mapbox-gl-js.\n   * Required when using Mapbox vector tiles/styles.\n   */\n  accessToken?: string,\n\n  /** The longitude of the center of the map. */\n  longitude: number,\n\n  /** The latitude of the center of the map. */\n  latitude: number,\n\n  /** The tile zoom level of the map. */\n  zoom: number,\n\n  /** Specify the bearing of the viewport */\n  bearing?: number,\n\n  /** Specify the pitch of the viewport */\n  pitch?: number,\n\n  /** The minimum zoom level of the map (0-22). */\n  minZoom?: number,\n\n  /** The maximum zoom level of the map (0-22). */\n  maxZoom?: number,\n\n  /**\n   * If `true`, the map's position (zoom, center latitude,\n   * center longitude, bearing, and pitch) will be synced\n   * with the hash fragment of the page's URL. For example,\n   * http://path/to/my/page.html#2.59/39.26/53.07/-24.1/60.\n   */\n  hash?: boolean,\n\n  /**\n   * The threshold, measured in degrees, that determines when\n   * the map's bearing (rotation) will snap to north. For\n   * example, with a  bearingSnap of 7, if the user rotates the\n   * map within 7 degrees of north, the map will automatically\n   * snap to exact north.\n   */\n  bearingSnap?: number,\n\n  /**\n   * If `false`, the map's pitch (tilt) control with \"drag to\n   * rotate\" interaction will be disabled.\n   */\n  pitchWithRotate?: boolean,\n\n  /** If `true`, an AttributionControl will be added to the map. */\n  attributionControl?: boolean,\n\n  /* A string representing the position of the Mapbox wordmark on the map. */\n  logoPosition?: 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right',\n\n  /**\n   * If `true`, map creation will fail if the performance of Mapbox\n   * GL JS would be dramatically worse than expected (i.e. a software\n   * renderer would be used).\n   */\n  failIfMajorPerformanceCaveat?: boolean,\n\n  /**\n   * Mapbox WebGL context creation option.\n   * Useful when you want to export the canvas as a PNG.\n   */\n  preserveDrawingBuffer?: boolean,\n\n  /**\n   * If `true`, the gl context will be created with MSAA antialiasing,\n   * which can be useful for antialiasing custom layers. this is `false`\n   * by default as a performance optimization.\n   */\n  antialias?: boolean,\n\n  /**\n   * If `false`, the map won't attempt to re-request tiles once they\n   * expire per their HTTP `cacheControl`/`expires` headers.\n   */\n  refreshExpiredTiles?: boolean,\n\n  /** If set, the map will be constrained to the given bounds. */\n  maxBounds?: MapboxLngLatBoundsLike,\n\n  /**\n   * The initial bounds of the map. If bounds is specified,\n   * it overrides center and zoom constructor options.\n   * */\n  bounds?: MapboxLngLatBoundsLike,\n\n  /** If `true`, the \"scroll to zoom\" interaction is enabled. */\n  scrollZoom?: boolean | Object,\n\n  /** If `true`, the \"box zoom\" interaction is enabled */\n  boxZoom?: boolean,\n\n  /** If `true`, the \"drag to rotate\" interaction is enabled */\n  dragRotate?: boolean,\n\n  /** If `true`, the \"drag to pan\" interaction is enabled */\n  dragPan?: boolean,\n\n  /** If `true`, keyboard shortcuts are enabled */\n  keyboard?: boolean,\n\n  /** If `true`, the \"double click to zoom\" interaction is enabled */\n  doubleClickZoom?: boolean,\n\n  /**\n   * If `true`, the map will automatically resize\n   * when the browser window resizes.\n   */\n  trackResize?: boolean,\n\n  /**\n   * The maximum number of tiles stored in the tile cache for a given\n   * source. If omitted, the cache will be dynamically sized based on\n   * the current viewport.\n   */\n  maxTileCacheSize?: number,\n\n  /**\n   * If `true`, multiple copies of the world\n   * will be rendered, when zoomed out\n   */\n  renderWorldCopies?: boolean,\n\n  /**\n   * If specified, defines a CSS font-family for locally overriding\n   * generation of glyphs in the 'CJK Unified Ideographs' and\n   * 'Hangul Syllables' ranges. In these ranges, font settings from the\n   * map's style will be ignored, except for font-weight keywords\n   * (light/regular/medium/bold). The purpose of this option is to avoid\n   * bandwidth-intensive glyph server requests.\n   * (see https://www.mapbox.com/mapbox-gl-js/example/local-ideographs )\n   */\n  localIdeographFontFamily?: boolean,\n\n  /**\n   * A callback run before the Map makes a request for an external URL.\n   * The callback can be used to modify the url, set headers, or set the\n   * credentials property for cross-origin requests. Expected to return\n   * an object with a  url property and optionally  headers and\n   * credentials properties.\n   */\n  transformRequest?: (\n    url: string,\n    resourceType: string\n  ) => { url: string, headers?: Object, credentials?: string },\n\n  /**\n   * If true, Resource Timing API information will be collected for\n   * requests made by GeoJSON and Vector Tile web workers (this information\n   * is normally inaccessible from the main Javascript thread). Information\n   * will be returned in a resourceTiming property of relevant data events.\n   */\n  collectResourceTiming?: boolean,\n\n  /**\n   * Controls the duration of the fade-in/fade-out animation for label\n   * collisions, in milliseconds. This setting affects all symbol layers.\n   * This setting does not affect the duration of runtime styling transitions\n   * or raster tile cross-fading.\n   */\n  fadeDuration?: number,\n\n  /**\n   * If `true`, symbols from multiple sources can collide with each\n   * other during collision detection. If `false`, collision detection\n   * is run separately for the symbols in each source.\n   */\n  crossSourceCollisions?: boolean,\n\n  /**\n   * A patch to apply to the default localization table for UI strings,\n   * e.g. control tooltips. The `locale` object maps namespaced UI string IDs\n   * to translated strings in the target language;\n   * see `src/ui/default_locale.js` for an example with all supported\n   * string IDs. The object may specify all UI strings (thereby adding support\n   * for a new translation) or only a subset of strings (thereby patching\n   * the default translation table).\n   */\n  locale?: string,\n\n  /**\n   * `onViewportChange` callback is fired when the user interacted with the\n   * map. The object passed to the callback contains viewport properties\n   * such as `longitude`, `latitude`, `zoom` etc.\n   */\n  onViewportChange?: (viewport: Viewport) => void,\n\n  /**\n   * Map method that will be called after new viewport props are received.\n   */\n  viewportChangeMethod?: ViewportChangeMethod,\n\n  /**\n   * Options common to map movement methods that involve animation,\n   * controlling the duration and easing function of the animation.\n   * This options will be passed to the `viewportChangeMethod` call.\n   * (see https://docs.mapbox.com/mapbox-gl-js/api/#animationoptions)\n   */\n  viewportChangeOptions?: AnimationOptions,\n\n  /** The onLoad callback for the map */\n  onLoad?: Function,\n\n  /** Map cursor style as CSS value */\n  cursorStyle?: string,\n\n  /**\n   * Sets a Boolean indicating whether the map will render an outline around\n   * each tile and the tile ID. These tile boundaries are useful for debugging.\n   * */\n  showTileBoundaries?: boolean\n};\n\ntype State = {\n  loaded: boolean\n};\n\nclass MapGL extends PureComponent<Props, State> {\n  _map: MapboxMap;\n\n  _container: { current: null | ElementRef<'div'> };\n\n  static displayName = 'MapGL';\n\n  static defaultProps = {\n    children: null,\n    className: null,\n    style: null,\n    mapStyle: 'mapbox://styles/mapbox/light-v8',\n    accessToken: null,\n    bearing: 0,\n    pitch: 0,\n    minZoom: 0,\n    maxZoom: 22,\n    maxBounds: null,\n    bounds: null,\n    hash: false,\n    bearingSnap: 7,\n    pitchWithRotate: true,\n    attributionControl: true,\n    logoPosition: 'bottom-left',\n    failIfMajorPerformanceCaveat: false,\n    preserveDrawingBuffer: false,\n    antialias: false,\n    refreshExpiredTiles: true,\n    boxZoom: true,\n    scrollZoom: true,\n    dragRotate: true,\n    dragPan: true,\n    keyboard: true,\n    doubleClickZoom: true,\n    trackResize: true,\n    renderWorldCopies: true,\n    maxTileCacheSize: null,\n    onViewportChange: null,\n    onLoad: null,\n    localIdeographFontFamily: null,\n    transformRequest: null,\n    collectResourceTiming: false,\n    fadeDuration: 300,\n    crossSourceCollisions: true,\n    locale: null,\n    cursorStyle: null,\n    viewportChangeMethod: jumpTo,\n    viewportChangeOptions: null\n  };\n\n  constructor(props: Props) {\n    super(props);\n\n    if (mapboxgl) {\n      mapboxgl.accessToken = props.accessToken;\n    }\n\n    this._container = createRef();\n  }\n\n  state = {\n    loaded: false\n  };\n\n  componentDidMount() {\n    if (!mapboxgl) {\n      return;\n    }\n\n    const container = this._container.current;\n\n    const map: MapboxMap = new mapboxgl.Map({\n      container,\n      style: this.props.mapStyle,\n      interactive: !!this.props.onViewportChange,\n      center: [this.props.longitude, this.props.latitude],\n      zoom: this.props.zoom,\n      pitch: this.props.pitch,\n      bearing: this.props.bearing,\n      minZoom: this.props.minZoom,\n      maxZoom: this.props.maxZoom,\n      hash: this.props.hash,\n      bearingSnap: this.props.bearingSnap,\n      pitchWithRotate: this.props.pitchWithRotate,\n      attributionControl: this.props.attributionControl,\n      logoPosition: this.props.logoPosition,\n      failIfMajorPerformanceCaveat: this.props.failIfMajorPerformanceCaveat,\n      preserveDrawingBuffer: this.props.preserveDrawingBuffer,\n      antialias: this.props.antialias,\n      refreshExpiredTiles: this.props.refreshExpiredTiles,\n      maxBounds: this.props.maxBounds,\n      bounds: this.props.bounds,\n      scrollZoom: this.props.scrollZoom,\n      boxZoom: this.props.boxZoom,\n      dragRotate: this.props.dragRotate,\n      dragPan: this.props.dragPan,\n      keyboard: this.props.keyboard,\n      doubleClickZoom: this.props.doubleClickZoom,\n      trackResize: this.props.trackResize,\n      renderWorldCopies: this.props.renderWorldCopies,\n      maxTileCacheSize: this.props.maxTileCacheSize,\n      localIdeographFontFamily: this.props.localIdeographFontFamily,\n      transformRequest: this.props.transformRequest,\n      collectResourceTiming: this.props.collectResourceTiming,\n      fadeDuration: this.props.fadeDuration,\n      crossSourceCollisions: this.props.crossSourceCollisions,\n      locale: this.props.locale\n    });\n\n    this._map = map;\n\n    map.once('load', () => {\n      this.setState({ loaded: true }, this.props.onLoad);\n    });\n\n    if (this.props.onViewportChange) {\n      map.on('dragend', this._onViewportChange);\n      map.on('zoomend', this._onViewportChange);\n      map.on('rotateend', this._onViewportChange);\n      map.on('pitchend', this._onViewportChange);\n      map.on('boxzoomend', this._onViewportChange);\n    }\n\n    events.forEach((event) => {\n      const propName = `on${capitalizeFirstLetter(event)}`;\n      const prop = this.props[propName];\n      if (prop) {\n        if (Array.isArray(prop)) {\n          map.on(event, ...prop);\n        } else {\n          map.on(event, prop);\n        }\n      }\n    });\n\n    if (this.props.cursorStyle) {\n      map.getCanvas().style.cursor = this.props.cursorStyle;\n    }\n\n    if (this.props.showTileBoundaries) {\n      this._map.showTileBoundaries = this.props.showTileBoundaries;\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    this._updateMapViewport(prevProps, this.props);\n    this._updateMapStyle(prevProps, this.props);\n    this._updateMapSize(prevProps, this.props);\n    this._updateMapEventListeners(prevProps, this.props);\n\n    if (!prevProps.cursorStyle !== this.props.cursorStyle) {\n      this._map.getCanvas().style.cursor = this.props.cursorStyle;\n    }\n\n    if (prevProps.showTileBoundaries !== this.props.showTileBoundaries) {\n      this._map.showTileBoundaries = !!this.props.showTileBoundaries;\n    }\n  }\n\n  componentWillUnmount() {\n    if (this._map) {\n      this._map.remove();\n    }\n  }\n\n  // External apps can access map this way\n  getMap() {\n    return this._map;\n  }\n\n  /**\n   * Update Map event listeners from newProps\n   *\n   * @private\n   * @param {Props} prevProps\n   * @param {Props} newProps\n   */\n  _updateMapEventListeners(prevProps: Props, newProps: Props): void {\n    events.forEach((event) => {\n      const propName = `on${capitalizeFirstLetter(event)}`;\n      const prevEventHandler = prevProps[propName];\n      const newEventHandler = newProps[propName];\n      if (!((Array.isArray(prevEventHandler) &&\n          Array.isArray(newEventHandler) &&\n          isArraysEqual(prevEventHandler, newEventHandler)) ||\n          prevEventHandler === newEventHandler)) {\n        if (prevEventHandler) {\n          if (Array.isArray(prevEventHandler)) {\n            this._map.off(event, ...prevEventHandler);\n          } else {\n            this._map.off(event, prevEventHandler);\n          }\n        }\n        if (newEventHandler) {\n          if (Array.isArray(newEventHandler)) {\n            this._map.on(event, ...newEventHandler);\n          } else {\n            this._map.on(event, newEventHandler);\n          }\n        }\n      }\n    });\n  }\n\n  /**\n   * Update Map style from newProps\n   *\n   * @private\n   * @param {Props} prevProps\n   * @param {Props} newProps\n   */\n  _updateMapStyle(prevProps: Props, newProps: Props): void {\n    const newMapStyle = newProps.mapStyle;\n    const prevMapStyle = prevProps.mapStyle;\n\n    if (newMapStyle !== prevMapStyle) {\n      this.setState({ loaded: false }, () => {\n        this._map.setStyle(newMapStyle);\n        this._map.once('style.load', () => this.setState({ loaded: true }));\n      });\n    }\n  }\n\n  /**\n   * Update Map viewport from newProps\n   *\n   * @private\n   * @param {Props} prevProps\n   * @param {Props} newProps\n   */\n  _updateMapViewport(prevProps: Props, newProps: Props): void {\n    const map: MapboxMap = this._map;\n    const center = map.getCenter();\n\n    const viewportChanged =\n      (newProps.latitude !== prevProps.latitude &&\n        newProps.latitude !== center.lat) ||\n      (newProps.longitude !== prevProps.longitude &&\n        newProps.longitude !== center.lng) ||\n      (newProps.zoom !== prevProps.zoom && newProps.zoom !== map.getZoom()) ||\n      (newProps.pitch !== prevProps.pitch &&\n        newProps.pitch !== map.getPitch()) ||\n      (newProps.bearing !== prevProps.bearing &&\n        newProps.bearing !== map.getBearing());\n\n    if (!viewportChanged) {\n      return;\n    }\n\n    const viewport = {\n      center: [newProps.longitude, newProps.latitude],\n      zoom: newProps.zoom,\n      pitch: newProps.pitch,\n      bearing: newProps.bearing\n    };\n\n    const { viewportChangeMethod, viewportChangeOptions } = this.props;\n    const options = { ...viewportChangeOptions, ...viewport };\n\n    switch (viewportChangeMethod) {\n      case flyTo:\n        map.flyTo(options);\n        break;\n      case jumpTo:\n        map.jumpTo(options);\n        break;\n      case easeTo:\n        map.easeTo(options);\n        break;\n      default:\n        throw new Error('Unknown viewport change method');\n    }\n  }\n\n  /**\n   * Update Map size from newProps\n   *\n   * @private\n   * @param {Props} prevProps\n   * @param {Props} newProps\n   */\n  _updateMapSize(prevProps: Props, newProps: Props): void {\n    const sizeChanged =\n      (prevProps.style && prevProps.style.height) !==\n        (newProps.style && newProps.style.height) ||\n      (prevProps.style && prevProps.style.width) !==\n        (newProps.style && newProps.style.width);\n\n    if (!sizeChanged) {\n      return;\n    }\n\n    this._map.resize();\n  }\n\n  /**\n   * fires `onViewportChange` callback when the user interacted with the map.\n   *\n   * @private\n   * @param {ViewportChangeEvent} event\n   */\n  _onViewportChange = (event: ViewportChangeEvent): void => {\n    if (!event.originalEvent) {\n      return;\n    }\n\n    const map = this._map;\n\n    const { lng, lat } = map.getCenter();\n    const zoom = map.getZoom();\n    const pitch = map.getPitch();\n    const bearing = map.getBearing();\n\n    const viewport: Viewport = {\n      latitude: lat,\n      longitude: lng,\n      zoom,\n      pitch,\n      bearing\n    };\n\n    // $FlowFixMe\n    this.props.onViewportChange(viewport);\n  };\n\n  render() {\n    const { loaded } = this.state;\n    const { className, style } = this.props;\n\n    const children = this.props.children\n      ? normalizeChildren(this.props.children)\n      : null;\n\n    return createElement(\n      MapContext.Provider,\n      { value: this._map },\n      createElement(\n        'div',\n        {\n          ref: this._container,\n          style,\n          className\n        },\n        loaded && children\n      )\n    );\n  }\n}\n\nexport default MapGL;\n","// @flow\nimport type {\n  SourceSpecification,\n  RasterSourceSpecification,\n  RasterDEMSourceSpecification,\n  VectorSourceSpecification,\n  GeoJSONSourceSpecification,\n  ImageSourceSpecification,\n  VideoSourceSpecification\n} from 'mapbox-gl/src/style-spec/types';\n\nexport default (props: SourceSpecification): SourceSpecification => {\n  switch (props.type) {\n    case 'vector': {\n      const source: VectorSourceSpecification = { type: 'vector', ...props };\n      return source;\n    }\n    case 'raster': {\n      const source: RasterSourceSpecification = { type: 'raster', ...props };\n      return source;\n    }\n    case 'raster-dem': {\n      const source: RasterDEMSourceSpecification = {\n        type: 'raster-dem',\n        ...props\n      };\n      return source;\n    }\n    case 'geojson': {\n      const source: GeoJSONSourceSpecification = { type: 'geojson', ...props };\n      return source;\n    }\n    case 'video': {\n      const source: VideoSourceSpecification = { type: 'video', ...props };\n      return source;\n    }\n    case 'image': {\n      const source: ImageSourceSpecification = { type: 'image', ...props };\n      return source;\n    }\n    default:\n      throw new Error(`Unknown type for '${props.id}' Source`);\n  }\n};\n","// @flow\n\nimport { PureComponent, createElement } from 'react';\nimport type MapboxMap from 'mapbox-gl/src/ui/map';\nimport type { ChildrenArray, Element } from 'react';\nimport type {\n  SourceSpecification,\n  RasterSourceSpecification,\n  VectorSourceSpecification,\n  GeoJSONSourceSpecification,\n  ImageSourceSpecification\n} from 'mapbox-gl/src/style-spec/types';\n\nimport MapContext from '../MapContext';\nimport Layer from '../Layer';\n\n/* eslint-disable import/no-cycle */\nimport isArraysEqual from '../../utils/isArraysEqual';\nimport validateSource from '../../utils/validateSource';\n\nexport type TileSourceSpecification =\n  | VectorSourceSpecification\n  | RasterSourceSpecification;\n\nexport type Props = {\n  /** Mapbox GL Source */\n  ...SourceSpecification,\n\n  /** Mapbox GL Source id */\n  id: string,\n\n  /** Layers */\n  children?: ChildrenArray<Element<typeof Layer>>\n};\n\ntype State = {\n  loaded: boolean\n};\n\nclass Source extends PureComponent<Props, State> {\n  _map: MapboxMap;\n\n  static displayName = 'Source';\n\n  state = {\n    loaded: false\n  };\n\n  componentDidMount() {\n    const { id, children, ...restSourceProps } = this.props;\n    const source = validateSource((restSourceProps: any));\n\n    this._map.addSource(id, source);\n    this._map.on('sourcedata', this._onSourceData);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const {\n      id: prevId,\n      children: prevChildren,\n      ...prevSourceProps\n    } = prevProps;\n    const prevSource = validateSource((prevSourceProps: any));\n\n    const { id, children, ...restSourceProps } = this.props;\n    const source = validateSource((restSourceProps: any));\n\n    if (id !== prevId || source.type !== prevSource.type) {\n      this._map.removeSource(prevId);\n      this._map.addSource(id, source);\n      return;\n    }\n\n    if (source.type === 'geojson' && prevSource.type === 'geojson') {\n      this._updateGeoJSONSource(id, prevSource, source);\n      return;\n    }\n\n    if (source.type === 'image' && prevSource.type === 'image') {\n      this._updateImageSource(id, prevSource, source);\n      return;\n    }\n\n    if (source.type === 'vector' && prevSource.type === 'vector') {\n      this._updateTileSource(id, prevSource, source);\n      return;\n    }\n\n    if (source.type === 'raster' && prevSource.type === 'raster') {\n      this._updateTileSource(id, prevSource, source);\n    }\n  }\n\n  componentWillUnmount() {\n    if (!this._map || !this._map.getStyle()) {\n      return;\n    }\n\n    this._removeSource();\n  }\n\n  _onSourceData = () => {\n    if (!this._map.isSourceLoaded(this.props.id)) {\n      return;\n    }\n\n    this._map.off('sourcedata', this._onSourceData);\n    this.setState({ loaded: true });\n  };\n\n  _updateGeoJSONSource = (\n    id: string,\n    prevSource: GeoJSONSourceSpecification,\n    newSource: GeoJSONSourceSpecification\n  ) => {\n    if (newSource.data !== prevSource.data) {\n      const source = this._map.getSource(id);\n\n      if (source !== undefined) {\n        source.setData(newSource.data);\n      }\n    }\n  };\n\n  _updateImageSource = (\n    id: string,\n    prevSource: ImageSourceSpecification,\n    newSource: ImageSourceSpecification\n  ) => {\n    if (\n      newSource.url !== prevSource.url ||\n      newSource.coordinates !== prevSource.coordinates\n    ) {\n      const source = this._map.getSource(id);\n      if (source !== undefined) {\n        source.updateImage(newSource);\n      }\n    }\n  };\n\n  // https://github.com/mapbox/mapbox-gl-js/pull/8048\n  _updateTileSource = (\n    id: string,\n    prevSource: TileSourceSpecification,\n    newSource: TileSourceSpecification\n  ) => {\n    if (\n      newSource.url === prevSource.url &&\n      isArraysEqual(newSource.tiles, prevSource.tiles)\n    ) {\n      return;\n    }\n\n    const source = this._map.getSource(id);\n\n    /* eslint-disable no-underscore-dangle */\n    if (source._tileJSONRequest) {\n      source._tileJSONRequest.cancel();\n    }\n\n    source.url = newSource.url;\n    source.scheme = newSource.scheme;\n    source._options = { ...source._options, ...newSource };\n    /* eslint-enable no-underscore-dangle */\n\n    const sourceCache = this._map.style.sourceCaches[id];\n    if (sourceCache) {\n      sourceCache.clearTiles();\n    }\n\n    source.load();\n  };\n\n  _removeSource = () => {\n    const { id } = this.props;\n    if (this._map.getSource(id)) {\n      const { layers } = this._map.getStyle();\n      if (layers) {\n        layers.forEach((layer) => {\n          if (layer.source === id) {\n            this._map.removeLayer(layer.id);\n          }\n        });\n      }\n\n      this._map.removeSource(id);\n    }\n  };\n\n  render() {\n    const { loaded } = this.state;\n    const { children } = this.props;\n\n    return createElement(MapContext.Consumer, {}, (map: ?MapboxMap) => {\n      if (map) {\n        this._map = map;\n      }\n\n      // $FlowFixMe\n      return loaded && children;\n    });\n  }\n}\n\nexport default Source;\n","// @flow\n\nimport { createPortal } from 'react-dom';\nimport { PureComponent, createElement } from 'react';\nimport type MapboxMap from 'mapbox-gl/src/ui/map';\nimport type MapboxPopup from 'mapbox-gl/src/ui/popup';\nimport type MapboxLngLatBoundsLike from 'mapbox-gl/src/geo/lng_lat_bounds';\n\nimport MapContext from '../MapContext';\nimport mapboxgl from '../../utils/mapbox-gl';\n\ntype Props = {\n  /** Popup content. */\n  children: React$Node,\n\n  /** The longitude of the center of the popup. */\n  longitude: number,\n\n  /** The latitude of the center of the popup. */\n  latitude: number,\n\n  /*\n   * If true, a close button will appear\n   * in the top right corner of the popup.\n   */\n  closeButton?: boolean,\n\n  /** If true, the popup will closed when the map is clicked. */\n  closeOnClick?: boolean,\n\n  /** The onClose callback is fired when the popup closed. */\n  onClose?: Function,\n\n  /*\n   * A string indicating the part of the Popup\n   * that should be positioned closest to the coordinate.\n   * */\n  anchor?:\n    | 'top'\n    | 'bottom'\n    | 'left'\n    | 'right'\n    | 'top-left'\n    | 'top-right'\n    | 'bottom-left'\n    | 'bottom-right',\n\n  /**\n   * The offset in pixels as a `PointLike` object to apply\n   * relative to the element's center. Negatives indicate left and up.\n   */\n  offset?: MapboxLngLatBoundsLike,\n\n  /** The className of the popup */\n  className?: string,\n\n  /** A string that sets the CSS property of the popup's maximum width. */\n  maxWidth?: string\n};\n\nclass Popup extends PureComponent<Props> {\n  _map: MapboxMap;\n\n  _el: HTMLDivElement;\n\n  _popup: MapboxPopup;\n\n  static displayName = 'Popup';\n\n  static defaultProps = {\n    closeButton: true,\n    closeOnClick: true,\n    onClose: null,\n    anchor: null,\n    offset: null,\n    className: null,\n    maxWidth: '240px'\n  };\n\n  constructor(props: Props) {\n    super(props);\n    this._el = document.createElement('div');\n  }\n\n  componentDidMount() {\n    const {\n      longitude,\n      latitude,\n      offset,\n      closeButton,\n      closeOnClick,\n      onClose,\n      anchor,\n      className,\n      maxWidth\n    } = this.props;\n\n    this._popup = new mapboxgl.Popup({\n      offset,\n      closeButton,\n      closeOnClick,\n      anchor,\n      className,\n      maxWidth\n    });\n\n    this._popup.setDOMContent(this._el);\n    this._popup.setLngLat([longitude, latitude]).addTo(this._map);\n\n    if (onClose) {\n      this._popup.on('close', onClose);\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const positionChanged =\n      prevProps.latitude !== this.props.latitude ||\n      prevProps.longitude !== this.props.longitude;\n\n    if (positionChanged) {\n      this._popup.setLngLat([this.props.longitude, this.props.latitude]);\n    }\n  }\n\n  componentWillUnmount() {\n    if (!this._map || !this._map.getStyle()) {\n      return;\n    }\n\n    this._popup.remove();\n  }\n\n  getPopup() {\n    return this._popup;\n  }\n\n  render() {\n    return createElement(MapContext.Consumer, {}, (map) => {\n      if (map) {\n        this._map = map;\n      }\n\n      return createPortal(this.props.children, this._el);\n    });\n  }\n}\n\nexport default Popup;\n","// @flow\n\nimport { createPortal } from 'react-dom';\nimport { PureComponent, createElement } from 'react';\nimport type MapboxMap from 'mapbox-gl/src/ui/map';\nimport type MapboxMarker from 'mapbox-gl/src/ui/marker';\nimport type LngLat from 'mapbox-gl/src/geo/lng_lat';\nimport type { PointLike } from '@mapbox/point-geometry';\n\nimport MapContext from '../MapContext';\nimport mapboxgl from '../../utils/mapbox-gl';\n\ntype Props = {\n  /** Marker content */\n  children: React$Node,\n\n  /**\n   * A string indicating the part of the Marker\n   * that should be positioned closest to the coordinate\n   */\n  anchor:\n    | 'center'\n    | 'top'\n    | 'bottom'\n    | 'left'\n    | 'right'\n    | 'top-left'\n    | 'top-right'\n    | 'bottom-left'\n    | 'bottom-right',\n\n  /** The longitude of the center of the marker. */\n  longitude: number,\n\n  /** The latitude of the center of the marker. */\n  latitude: number,\n\n  /**\n   * The offset in pixels as a `PointLike` object to apply\n   * relative to the element's center. Negatives indicate left and up.\n   */\n  offset?: PointLike,\n\n  /**\n   * Boolean indicating whether or not a marker is able to be dragged\n   * to a new position on the map.\n   */\n  draggable?: boolean,\n\n  /**\n   * The rotation angle of the marker in degrees, relative to its\n   * respective `rotationAlignment` setting. A positive value will\n   * rotate the marker clockwise.\n   */\n  rotation: number,\n\n  /**\n   * map aligns the `Marker` to the plane of the map. `viewport`\n   * aligns the  Marker to the plane of the viewport. `auto` automatically\n   * matches the value of `rotationAlignment`.\n   */\n  pitchAlignment: string,\n\n  /**\n   * map aligns the `Marker`'s rotation relative to the map, maintaining\n   * a bearing as the map rotates. `viewport` aligns the `Marker`'s rotation\n   * relative to the viewport, agnostic to map rotations.\n   * `auto` is equivalent to `viewport`.\n   */\n  rotationAlignment: string,\n\n  /** Fired when the marker is clicked */\n  onClick?: () => any,\n\n  /** Fired when the marker is finished being dragged */\n  onDragEnd?: (lngLat: LngLat) => any,\n\n  /** Fired when the marker is finished being dragged */\n  onDragStart?: (lngLat: LngLat) => any,\n\n  /** Fired when the marker is dragged */\n  onDrag?: (lngLat: LngLat) => any\n};\n\nclass Marker extends PureComponent<Props> {\n  _map: MapboxMap;\n\n  _el: HTMLDivElement;\n\n  _marker: MapboxMarker;\n\n  static displayName = 'Marker';\n\n  static defaultProps = {\n    anchor: 'center',\n    offset: null,\n    draggable: false,\n    rotation: 0,\n    pitchAlignment: 'auto',\n    rotationAlignment: 'auto'\n  };\n\n  constructor(props: Props) {\n    super(props);\n    this._el = document.createElement('div');\n  }\n\n  componentDidMount() {\n    const {\n      longitude,\n      latitude,\n      onClick,\n      onDragEnd,\n      onDragStart,\n      onDrag\n    } = this.props;\n\n    this._marker = new mapboxgl.Marker({\n      element: this._el,\n      anchor: this.props.anchor,\n      draggable: this.props.draggable,\n      offset: this.props.offset,\n      rotation: this.props.rotation,\n      pitchAlignment: this.props.pitchAlignment,\n      rotationAlignment: this.props.rotationAlignment\n    });\n\n    this._marker.setLngLat([longitude, latitude]).addTo(this._map);\n\n    if (onClick) {\n      this._el.addEventListener('click', onClick);\n    }\n\n    if (onDragEnd) {\n      this._marker.on('dragend', this._onDragEnd);\n    }\n\n    if (onDragStart) {\n      this._marker.on('dragstart', this._onDragStart);\n    }\n\n    if (onDrag) {\n      this._marker.on('drag', this._onDrag);\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const positionChanged =\n      prevProps.latitude !== this.props.latitude ||\n      prevProps.longitude !== this.props.longitude;\n\n    if (positionChanged) {\n      this._marker.setLngLat([this.props.longitude, this.props.latitude]);\n    }\n  }\n\n  componentWillUnmount() {\n    if (!this._map || !this._map.getStyle()) {\n      return;\n    }\n\n    if (this.props.onClick) {\n      this._el.removeEventListener('click', this.props.onClick);\n    }\n\n    this._marker.remove();\n  }\n\n  getMarker() {\n    return this._marker;\n  }\n\n  _onDragEnd = (): void => {\n    // $FlowFixMe\n    this.props.onDragEnd(this._marker.getLngLat());\n  };\n\n  _onDragStart = (): void => {\n    // $FlowFixMe\n    this.props.onDragStart(this._marker.getLngLat());\n  };\n\n  _onDrag = (): void => {\n    // $FlowFixMe\n    this.props.onDrag(this._marker.getLngLat());\n  };\n\n  render() {\n    return createElement(MapContext.Consumer, {}, (map) => {\n      if (map) {\n        this._map = map;\n      }\n\n      return createPortal(this.props.children, this._el);\n    });\n  }\n}\n\nexport default Marker;\n","// @flow\n\nimport { PureComponent, createElement } from 'react';\nimport type MapboxMap from 'mapbox-gl/src/ui/map';\n\nimport MapContext from '../MapContext';\n\ntype Props = {\n  /** Unique id of the feature. */\n  id: string | number,\n\n  /** The Id of the vector source or GeoJSON source for the feature. */\n  source: string,\n\n  /** For vector tile sources, the sourceLayer is required. */\n  sourceLayer: string,\n\n  /** A set of key-value pairs. The values should be valid JSON types. */\n  state: Object\n};\n\n/**\n * A `FeatureState` component sets the state of a feature.\n */\nclass FeatureState extends PureComponent<Props> {\n  _map: MapboxMap;\n\n  componentDidMount() {\n    const map: MapboxMap = this._map;\n    const { id, source, sourceLayer, state } = this.props;\n    map.setFeatureState({ id, source, sourceLayer }, state);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const map = this._map;\n    const { id, source, sourceLayer, state } = this.props;\n\n    if (\n      id !== prevProps.id ||\n      source !== prevProps.source ||\n      sourceLayer !== prevProps.sourceLayer ||\n      state !== prevProps.state\n    ) {\n      map.removeFeatureState({\n        id: prevProps.id,\n        source: prevProps.source,\n        sourceLayer: prevProps.sourceLayer\n      });\n\n      map.setFeatureState({ id, source, sourceLayer }, state);\n    }\n  }\n\n  componentWillUnmount() {\n    if (!this._map || !this._map.getStyle()) {\n      return;\n    }\n\n    const { id, source, sourceLayer } = this.props;\n    this._map.removeFeatureState({ id, source, sourceLayer });\n  }\n\n  render() {\n    return createElement(MapContext.Consumer, {}, (map) => {\n      if (map) {\n        this._map = map;\n      }\n\n      return null;\n    });\n  }\n}\n\nexport default FeatureState;\n","// @flow\n\nimport { PureComponent, createElement } from 'react';\nimport type MapboxMap from 'mapbox-gl/src/ui/map';\nimport type { StyleImageInterface } from 'mapbox-gl/src/style/style_image';\n\nimport MapContext from '../MapContext';\n\ntype MapboxImage =\n  | HTMLImageElement\n  | ImageData\n  | { width: number, height: number, data: Uint8Array | Uint8ClampedArray }\n  | StyleImageInterface;\n\ntype Props = {|\n  /** The ID of the image. */\n  id: string,\n\n  /**\n   * The image as an `HTMLImageElement`, `ImageData`, object with `width`,\n   * `height`, and `data` properties with the same format as `ImageData`\n   * or image url string\n   * */\n  image: MapboxImage | string,\n\n  /** The ratio of pixels in the image to physical pixels on the screen */\n  pixelRatio?: number,\n\n  /** Whether the image should be interpreted as an SDF image */\n  sdf?: boolean\n|};\n\nclass Image extends PureComponent<Props> {\n  _map: MapboxMap;\n\n  _id: string;\n\n  static defaultProps = {\n    pixelRatio: 1,\n    sdf: false\n  };\n\n  constructor(props: Props) {\n    super(props);\n    this._id = props.id;\n  }\n\n  componentDidMount() {\n    const { image, pixelRatio, sdf } = this.props;\n    this._loadImage(image, data =>\n      this._map.addImage(this._id, data, { pixelRatio, sdf })\n    );\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const { id, image, pixelRatio, sdf } = this.props;\n\n    if (\n      id !== prevProps.id ||\n      sdf !== prevProps.sdf ||\n      pixelRatio !== prevProps.pixelRatio\n    ) {\n      this._id = id;\n      this._map.removeImage(prevProps.id);\n      this._loadImage(image, data =>\n        this._map.addImage(this._id, data, { pixelRatio, sdf })\n      );\n\n      return;\n    }\n\n    if (image !== prevProps.image) {\n      this._loadImage(image, data => this._map.updateImage(this._id, data));\n    }\n  }\n\n  componentWillUnmount() {\n    if (!this._map || !this._map.getStyle() || !this._map.hasImage(this._id)) {\n      return;\n    }\n\n    this._map.removeImage(this._id);\n  }\n\n  _loadImage = (image: MapboxImage | string, callback: MapboxImage => void) => {\n    if (typeof image === 'string') {\n      this._map.loadImage(image, (error, data) => {\n        if (error) throw error;\n        callback(data);\n      });\n\n      return;\n    }\n\n    callback(image);\n  };\n\n  render() {\n    return createElement(MapContext.Consumer, {}, (map) => {\n      if (map) {\n        this._map = map;\n      }\n\n      return null;\n    });\n  }\n}\n\nexport default Image;\n","// @flow\n\nimport { PureComponent, createElement } from 'react';\nimport type MapboxMap from 'mapbox-gl/src/ui/map';\nimport type MapboxAttributionControl from 'mapbox-gl/src/ui/control/attribution_control';\n\nimport MapContext from '../MapContext';\nimport mapboxgl from '../../utils/mapbox-gl';\n\ntype Props = {\n  /**\n   * If `true` force a compact attribution that shows the full\n   * attribution on mouse hover, or if  false force the full attribution\n   * control. The default is a responsive attribution that collapses when\n   * the map is less than 640 pixels wide.\n   */\n  compact: boolean,\n\n  /* String or strings to show in addition to any other attributions. */\n  customAttribution: string | Array<string>,\n\n  /* A string representing the position of the control on the map. */\n  position?: 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right'\n};\n\n/**\n * An `AttributionControl` control presents the map's attribution information.\n */\nclass AttributionControl extends PureComponent<Props> {\n  _map: MapboxMap;\n\n  _control: MapboxAttributionControl;\n\n  static defaultProps = {\n    position: 'bottom-right'\n  };\n\n  componentDidMount() {\n    const map: MapboxMap = this._map;\n    const { compact, customAttribution, position } = this.props;\n\n    const control: MapboxAttributionControl = new mapboxgl.AttributionControl({\n      compact,\n      customAttribution\n    });\n\n    map.addControl(control, position);\n    this._control = control;\n  }\n\n  componentWillUnmount() {\n    if (!this._map || !this._map.getStyle()) {\n      return;\n    }\n\n    this._map.removeControl(this._control);\n  }\n\n  getControl() {\n    return this._control;\n  }\n\n  render() {\n    return createElement(MapContext.Consumer, {}, (map) => {\n      if (map) {\n        this._map = map;\n      }\n      return null;\n    });\n  }\n}\n\nexport default AttributionControl;\n","// @flow\n\nimport { PureComponent, createElement } from 'react';\nimport type MapboxMap from 'mapbox-gl/src/ui/map';\nimport type MapboxFullscreenControl from 'mapbox-gl/src/ui/control/fullscreen_control';\n\nimport MapContext from '../MapContext';\nimport mapboxgl from '../../utils/mapbox-gl';\n\ntype Props = {\n  /**\n   * container is the compatible DOM element which should be\n   * made full screen. By default, the map container element\n   * will be made full screen.\n   */\n  container: string,\n\n  /* A string representing the position of the control on the map. */\n  position?: 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right'\n};\n\n/**\n * A `FullscreenControl` control contains a button for toggling the map in\n * and out of fullscreen mode.\n */\nclass FullscreenControl extends PureComponent<Props> {\n  _map: MapboxMap;\n\n  _control: MapboxFullscreenControl;\n\n  static defaultProps = {\n    position: 'top-right'\n  };\n\n  componentDidMount() {\n    const map: MapboxMap = this._map;\n    const { container, position } = this.props;\n\n    const control: MapboxFullscreenControl = new mapboxgl.FullscreenControl({\n      container\n    });\n\n    map.addControl(control, position);\n    this._control = control;\n  }\n\n  componentWillUnmount() {\n    if (!this._map || !this._map.getStyle()) {\n      return;\n    }\n\n    this._map.removeControl(this._control);\n  }\n\n  getControl() {\n    return this._control;\n  }\n\n  render() {\n    return createElement(MapContext.Consumer, {}, (map) => {\n      if (map) {\n        this._map = map;\n      }\n      return null;\n    });\n  }\n}\n\nexport default FullscreenControl;\n","// @flow\n\nimport { PureComponent, createElement } from 'react';\nimport type MapboxMap from 'mapbox-gl/src/ui/map';\nimport type MapboxGeolocateControl from 'mapbox-gl/src/ui/control/geolocate_control';\n\nimport MapContext from '../MapContext';\nimport mapboxgl from '../../utils/mapbox-gl';\n\ntype Props = {\n  /* A Geolocation API PositionOptions object. */\n  positionOptions: PositionOptions,\n\n  /**\n   * A `fitBounds` options object to use when the map is\n   * panned and zoomed to the user's location.\n   */\n  fitBoundsOptions: Object,\n\n  /**\n   * If `true` the Geolocate Control becomes a toggle button and when active\n   * the map will receive updates to the user's location as it changes.\n   */\n  trackUserLocation: boolean,\n\n  /**\n   * By default a dot will be shown on the map at the user's location.\n   * Set to `false` to disable.\n   */\n  showUserLocation: boolean,\n\n  /* A string representing the position of the control on the map. */\n  position?: 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right',\n\n  /**\n   * Fired when the Geolocate Control changes to the background state.\n   */\n  onTrackUserLocationEnd?: Function,\n\n  /**\n   * Fired when the Geolocate Control changes to the active lock state,\n   */\n  onTrackUserLocationStart?: Function,\n\n  /**\n   * Fired on each Geolocation API position update which returned as an error.\n   */\n  onError?: Function,\n\n  /**\n   * Fired on each Geolocation API position update which returned as success.\n   */\n  onGeolocate?: Function\n};\n\n/**\n * A `GeolocateControl` control provides a button that uses the browser's\n * geolocation API to locate the user on the map.\n */\nclass GeolocateControl extends PureComponent<Props> {\n  _map: MapboxMap;\n\n  _control: MapboxGeolocateControl;\n\n  static defaultProps = {\n    positionOptions: { enableHighAccuracy: false, timeout: 6000 },\n    fitBoundsOptions: { maxZoom: 15 },\n    trackUserLocation: false,\n    showUserLocation: true\n  };\n\n  componentDidMount() {\n    const map: MapboxMap = this._map;\n    const {\n      positionOptions,\n      fitBoundsOptions,\n      trackUserLocation,\n      showUserLocation,\n      position,\n      onTrackUserLocationEnd,\n      onTrackUserLocationStart,\n      onError,\n      onGeolocate\n    } = this.props;\n\n    const control: MapboxGeolocateControl = new mapboxgl.GeolocateControl({\n      positionOptions,\n      fitBoundsOptions,\n      trackUserLocation,\n      showUserLocation\n    });\n\n    if (onTrackUserLocationEnd) {\n      control.on('trackuserlocationend', onTrackUserLocationEnd);\n    }\n\n    if (onTrackUserLocationStart) {\n      control.on('trackuserlocationstart', onTrackUserLocationStart);\n    }\n\n    if (onError) {\n      control.on('error', onError);\n    }\n\n    if (onGeolocate) {\n      control.on('geolocate', onGeolocate);\n    }\n\n    map.addControl(control, position);\n    this._control = control;\n  }\n\n  componentWillUnmount() {\n    if (!this._map || !this._map.getStyle()) {\n      return;\n    }\n\n    this._map.removeControl(this._control);\n  }\n\n  getControl() {\n    return this._control;\n  }\n\n  render() {\n    return createElement(MapContext.Consumer, {}, (map) => {\n      if (map) {\n        this._map = map;\n      }\n      return null;\n    });\n  }\n}\n\nexport default GeolocateControl;\n","// @flow\n\nimport { PureComponent, createElement } from 'react';\nimport type MapboxMap from 'mapbox-gl/src/ui/map';\nimport type MapboxNavigationControl from 'mapbox-gl/src/ui/control/navigation_control';\n\nimport MapContext from '../MapContext';\nimport mapboxgl from '../../utils/mapbox-gl';\n\ntype Props = {\n  /** If true the compass button is included. */\n  showCompass: boolean,\n\n  /** If true the zoom-in and zoom-out buttons are included. */\n  showZoom: boolean,\n\n  /**\n   * If true the pitch is visualized by rotating X-axis of compass\n   * and pitch will reset by clicking on the compass.\n   */\n  visualizePitch: boolean,\n\n  /** A string representing the position of the control on the map. */\n  position?: 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right'\n};\n\n/**\n * A `NavigationControl` control contains zoom buttons and a compass.\n */\nclass NavigationControl extends PureComponent<Props> {\n  _map: MapboxMap;\n\n  _control: MapboxNavigationControl;\n\n  static defaultProps = {\n    showCompass: true,\n    showZoom: true,\n    visualizePitch: false,\n    position: 'top-right'\n  };\n\n  componentDidMount() {\n    const map: MapboxMap = this._map;\n    const { showCompass, showZoom, visualizePitch, position } = this.props;\n\n    const control: MapboxNavigationControl = new mapboxgl.NavigationControl({\n      showCompass,\n      showZoom,\n      visualizePitch\n    });\n\n    map.addControl(control, position);\n    this._control = control;\n  }\n\n  componentWillUnmount() {\n    if (!this._map || !this._map.getStyle()) {\n      return;\n    }\n\n    this._map.removeControl(this._control);\n  }\n\n  getControl() {\n    return this._control;\n  }\n\n  render() {\n    return createElement(MapContext.Consumer, {}, (map) => {\n      if (map) {\n        this._map = map;\n      }\n      return null;\n    });\n  }\n}\n\nexport default NavigationControl;\n","// @flow\n\nimport { PureComponent, createElement } from 'react';\nimport type MapboxMap from 'mapbox-gl/src/ui/map';\nimport type MapboxScaleControl from 'mapbox-gl/src/ui/control/scale_control';\n\nimport MapContext from '../MapContext';\nimport mapboxgl from '../../utils/mapbox-gl';\n\ntype Props = {\n  /* The maximum length of the scale control in pixels. */\n  maxWidth: number,\n\n  /* Unit of the distance. */\n  unit: 'imperial' | 'metric' | 'nautical',\n\n  /* A string representing the position of the control on the map. */\n  position?: 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right'\n};\n\n/**\n * A `ScaleControl` control displays the ratio of a distance on the map\n * to the corresponding distance on the ground.\n */\nclass ScaleControl extends PureComponent<Props> {\n  _map: MapboxMap;\n\n  _control: MapboxScaleControl;\n\n  static defaultProps = {\n    position: 'bottom-right',\n    unit: 'metric'\n  };\n\n  componentDidMount() {\n    const map: MapboxMap = this._map;\n    const { maxWidth, unit, position } = this.props;\n\n    const control: MapboxScaleControl = new mapboxgl.ScaleControl({\n      maxWidth,\n      unit\n    });\n\n    map.addControl(control, position);\n    this._control = control;\n  }\n\n  componentWillUnmount() {\n    if (!this._map || !this._map.getStyle()) {\n      return;\n    }\n\n    this._map.removeControl(this._control);\n  }\n\n  getControl() {\n    return this._control;\n  }\n\n  render() {\n    return createElement(MapContext.Consumer, {}, (map) => {\n      if (map) {\n        this._map = map;\n      }\n      return null;\n    });\n  }\n}\n\nexport default ScaleControl;\n","/**\n * Create a new [Mapbox GL JS plugin](https://www.mapbox.com/blog/build-mapbox-gl-js-plugins/) that\n * modifies the layers of the map style to use the 'text-field' that matches the browser language.\n * @constructor\n * @param {object} options - Options to configure the plugin.\n * @param {string[]} [options.supportedLanguages] - List of supported languages\n * @param {Function} [options.languageTransform] - Custom style transformation to apply\n * @param {RegExp} [options.languageField=/^\\{name/] - RegExp to match if a text-field is a language field\n * @param {Function} [options.getLanguageField] - Given a language choose the field in the vector tiles\n * @param {string} [options.languageSource] - Name of the source that contains the different languages.\n * @param {string} [options.defaultLanguage] - Name of the default language to initialize style after loading.\n * @param {string[]} [options.excludedLayerIds] - Name of the layers that should be excluded from translation.\n */\nfunction MapboxLanguage(options) {\n  options = Object.assign({}, options);\n  if (!(this instanceof MapboxLanguage)) {\n    throw new Error('MapboxLanguage needs to be called with the new keyword');\n  }\n\n  this.setLanguage = this.setLanguage.bind(this);\n  this._initialStyleUpdate = this._initialStyleUpdate.bind(this);\n\n  this._defaultLanguage = options.defaultLanguage;\n  this._isLanguageField = options.languageField || /^\\{name/;\n  this._getLanguageField = options.getLanguageField || function nameField(language) {\n    return language === 'mul' ? '{name}' : '{name_' + language + '}';\n  };\n  this._languageSource = options.languageSource || null;\n  this._languageTransform = options.languageTransform || function (style, language) {\n    if (language === 'ar') {\n      return noSpacing(style);\n    } else {\n      return standardSpacing(style);\n    }\n  };\n  this._excludedLayerIds = options.excludedLayerIds || [];\n  this.supportedLanguages = options.supportedLanguages || ['ar', 'en', 'es', 'fr', 'de', 'ja', 'ko', 'mul', 'pt', 'ru', 'zh'];\n}\n\nfunction standardSpacing(style) {\n  var changedLayers = style.layers.map(function (layer) {\n    if (!(layer.layout || {})['text-field']) return layer;\n    var spacing = 0;\n    if (layer['source-layer'] === 'state_label') {\n      spacing = 0.15;\n    }\n    if (layer['source-layer'] === 'marine_label') {\n      if (/-lg/.test(layer.id)) {\n        spacing = 0.25;\n      }\n      if (/-md/.test(layer.id)) {\n        spacing = 0.15;\n      }\n      if (/-sm/.test(layer.id)) {\n        spacing = 0.1;\n      }\n    }\n    if (layer['source-layer'] === 'place_label') {\n      if (/-suburb/.test(layer.id)) {\n        spacing = 0.15;\n      }\n      if (/-neighbour/.test(layer.id)) {\n        spacing = 0.1;\n      }\n      if (/-islet/.test(layer.id)) {\n        spacing = 0.01;\n      }\n    }\n    if (layer['source-layer'] === 'airport_label') {\n      spacing = 0.01;\n    }\n    if (layer['source-layer'] === 'rail_station_label') {\n      spacing = 0.01;\n    }\n    if (layer['source-layer'] === 'poi_label') {\n      if (/-scalerank/.test(layer.id)) {\n        spacing = 0.01;\n      }\n    }\n    if (layer['source-layer'] === 'road_label') {\n      if (/-label-/.test(layer.id)) {\n        spacing = 0.01;\n      }\n      if (/-shields/.test(layer.id)) {\n        spacing = 0.05;\n      }\n    }\n    return Object.assign({}, layer, {\n      layout: Object.assign({}, layer.layout, {\n        'text-letter-spacing': spacing\n      })\n    });\n  });\n\n  return Object.assign({}, style, {\n    layers: changedLayers\n  });\n}\n\nfunction noSpacing(style) {\n  var changedLayers = style.layers.map(function (layer) {\n    if (!(layer.layout || {})['text-field']) return layer;\n    var spacing = 0;\n    return Object.assign({}, layer, {\n      layout: Object.assign({}, layer.layout, {\n        'text-letter-spacing': spacing\n      })\n    });\n  });\n\n  return Object.assign({}, style, {\n    layers: changedLayers\n  });\n}\n\nfunction isNameStringField(isLangField, property) {\n  return typeof property === 'string' && isLangField.test(property);\n}\n\nfunction isNameFunctionField(isLangField, property) {\n  return property.stops && property.stops.filter(function (stop) {\n    return isLangField.test(stop[1]);\n  }).length > 0;\n}\n\nfunction adaptPropertyLanguage(isLangField, property, languageFieldName) {\n  if (isNameStringField(isLangField, property)) return languageFieldName;\n  if (isNameFunctionField(isLangField, property)) {\n    var newStops = property.stops.map(function (stop) {\n      if (isLangField.test(stop[1])) {\n        return [stop[0], languageFieldName];\n      }\n      return stop;\n    });\n    return Object.assign({}, property, {\n      stops: newStops\n    });\n  }\n  return property;\n}\n\nfunction changeLayerTextProperty(isLangField, layer, languageFieldName, excludedLayerIds) {\n  if (layer.layout && layer.layout['text-field'] && excludedLayerIds.indexOf(layer.id) === -1) {\n    return Object.assign({}, layer, {\n      layout: Object.assign({}, layer.layout, {\n        'text-field': adaptPropertyLanguage(isLangField, layer.layout['text-field'], languageFieldName)\n      })\n    });\n  }\n  return layer;\n}\n\nfunction findStreetsSource(style) {\n  var sources = Object.keys(style.sources).filter(function (sourceName) {\n    var source = style.sources[sourceName];\n    return /mapbox-streets-v\\d/.test(source.url);\n  });\n  return sources[0];\n}\n\n/**\n * Explicitly change the language for a style.\n * @param {object} style - Mapbox GL style to modify\n * @param {string} language - The language iso code\n * @returns {object} the modified style\n */\nMapboxLanguage.prototype.setLanguage = function (style, language) {\n  if (this.supportedLanguages.indexOf(language) < 0) throw new Error('Language ' + language + ' is not supported');\n  var streetsSource = this._languageSource || findStreetsSource(style);\n  if (!streetsSource) return style;\n\n  var field = this._getLanguageField(language);\n  var isLangField = this._isLanguageField;\n  var excludedLayerIds = this._excludedLayerIds;\n  var changedLayers = style.layers.map(function (layer) {\n    if (layer.source === streetsSource) return changeLayerTextProperty(isLangField, layer, field, excludedLayerIds);\n    return layer;\n  });\n\n  var languageStyle = Object.assign({}, style, {\n    layers: changedLayers\n  });\n\n  return this._languageTransform(languageStyle, language);\n};\n\nMapboxLanguage.prototype._initialStyleUpdate = function () {\n  var style = this._map.getStyle();\n  var language = this._defaultLanguage || browserLanguage(this.supportedLanguages);\n\n  // We only update the style once\n  this._map.off('styledata', this._initialStyleUpdate);\n  this._map.setStyle(this.setLanguage(style, language));\n};\n\nfunction browserLanguage(supportedLanguages) {\n  var language = navigator.languages ? navigator.languages[0] : (navigator.language || navigator.userLanguage);\n  var parts = language.split('-');\n  var languageCode = language;\n  if (parts.length > 1) {\n    languageCode = parts[0];\n  }\n  if (supportedLanguages.indexOf(languageCode) > -1) {\n    return languageCode;\n  }\n  return null;\n}\n\nMapboxLanguage.prototype.onAdd = function (map) {\n  this._map = map;\n  this._map.on('styledata', this._initialStyleUpdate);\n  this._container = document.createElement('div');\n  return this._container;\n};\n\nMapboxLanguage.prototype.onRemove = function () {\n  this._map.off('styledata', this._initialStyleUpdate);\n  this._map = undefined;\n};\n\nfunction ie11Polyfill() {\n  if (typeof Object.assign != 'function') {\n    // Must be writable: true, enumerable: false, configurable: true\n    Object.defineProperty(Object, 'assign', {\n      // eslint-disable-next-line no-unused-vars\n      value: function assign(target, varArgs) { // .length of function is 2\n        // eslint-disable-next-line strict\n        'use strict';\n        if (target === null) { // TypeError if undefined or null\n          throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        var to = Object(target);\n\n        for (var index = 1; index < arguments.length; index++) {\n          var nextSource = arguments[index];\n\n          if (nextSource !== null) { // Skip over if undefined or null\n            for (var nextKey in nextSource) {\n              // Avoid bugs when hasOwnProperty is shadowed\n              if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n                to[nextKey] = nextSource[nextKey];\n              }\n            }\n          }\n        }\n        return to;\n      },\n      writable: true,\n      configurable: true\n    });\n  }\n}\n\nif (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = MapboxLanguage;\n} else {\n  ie11Polyfill();\n  window.MapboxLanguage = MapboxLanguage;\n}\n","// @flow\n\nimport { PureComponent, createElement } from 'react';\nimport type MapboxMap from 'mapbox-gl/src/ui/map';\nimport type MapboxLanguageControl from '@mapbox/mapbox-gl-language/index';\n\nimport MapboxLanguage from '@mapbox/mapbox-gl-language';\nimport MapContext from '../MapContext';\n\ntype Props = {\n  /** List of supported languages */\n  supportedLanguages?: string[],\n\n  /** Custom style transformation to apply */\n  languageTransform?: Function,\n\n  /**\n   * RegExp to match if a text-field is a language field\n   * (optional, default /^\\{name/)\n   */\n  languageField?: RegExp,\n\n  /** Given a language choose the field in the vector tiles */\n  getLanguageField?: Function,\n\n  /** Name of the source that contains the different languages. */\n  languageSource?: string,\n\n  /** Name of the default language to initialize style after loading. */\n  defaultLanguage?: string,\n\n  /** Name of the language to set */\n  language?: string\n};\n\n/**\n * Adds support for switching the language of your map style.\n */\nclass LanguageControl extends PureComponent<Props> {\n  _map: MapboxMap;\n\n  _control: MapboxLanguageControl;\n\n  static defaultProps = {};\n\n  componentDidMount() {\n    const map: MapboxMap = this._map;\n    const {\n      supportedLanguages,\n      languageTransform,\n      languageField,\n      getLanguageField,\n      languageSource,\n      defaultLanguage\n    } = this.props;\n\n    const control: MapboxLanguageControl = new MapboxLanguage({\n      supportedLanguages,\n      languageTransform,\n      languageField,\n      getLanguageField,\n      languageSource,\n      defaultLanguage\n    });\n\n    map.addControl(control);\n    this._control = control;\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.language !== this.props.language) {\n      this._setLanguage();\n    }\n  }\n\n  componentWillUnmount() {\n    if (!this._map || !this._map.getStyle()) {\n      return;\n    }\n\n    this._map.removeControl(this._control);\n  }\n\n  _setLanguage = () => {\n    const { language } = this.props;\n    const map = this._map;\n    const control = this._control;\n\n    if (language) {\n      map.setStyle(control.setLanguage(map.getStyle(), language));\n    }\n  };\n\n  getControl() {\n    return this._control;\n  }\n\n  render() {\n    return createElement(MapContext.Consumer, {}, (map) => {\n      if (map) {\n        this._map = map;\n      }\n      return null;\n    });\n  }\n}\n\nexport default LanguageControl;\n","var trafficLayers = [\n  {\n    'id': 'traffic-street-link-bg',\n    'type': 'line',\n    'metadata': {\n      'mapbox:group': '4053de47c16e55481b10fd748eaa994c'\n    },\n    'source': 'mapbox://mapbox.mapbox-traffic-v1',\n    'source-layer': 'traffic',\n    'minzoom': 15,\n    'filter': [\n      'all',\n      [\n        '==',\n        '$type',\n        'LineString'\n      ],\n      [\n        'all',\n        [\n          'has',\n          'congestion'\n        ],\n        [\n          'in',\n          'class',\n          'link',\n          'motorway_link',\n          'service',\n          'street'\n        ]\n      ]\n    ],\n    'layout': {\n      'visibility': 'visible',\n      'line-join': 'round',\n      'line-cap': 'round'\n    },\n    'paint': {\n      'line-width': {\n        'base': 1.5,\n        'stops': [\n          [\n            14,\n            2.5\n          ],\n          [\n            20,\n            15.5\n          ]\n        ]\n      },\n      'line-color': {\n        'base': 1,\n        'type': 'categorical',\n        'property': 'congestion',\n        'stops': [\n          [\n            'low',\n            'hsl(145, 95%, 30%)'\n          ],\n          [\n            'moderate',\n            'hsl(30, 100%, 42%)'\n          ],\n          [\n            'heavy',\n            'hsl(355, 100%, 37%)'\n          ],\n          [\n            'severe',\n            'hsl(355, 70%, 22%)'\n          ]\n        ]\n      },\n      'line-offset': {\n        'base': 1.5,\n        'stops': [\n          [\n            14,\n            2\n          ],\n          [\n            20,\n            18\n          ]\n        ]\n      },\n      'line-opacity': {\n        'base': 1,\n        'stops': [\n          [\n            15,\n            0\n          ],\n          [\n            16,\n            1\n          ]\n        ]\n      }\n    }\n  },\n  {\n    'id': 'traffic-secondary-tertiary-bg',\n    'type': 'line',\n    'metadata': {\n      'mapbox:group': '4053de47c16e55481b10fd748eaa994c'\n    },\n    'source': 'mapbox://mapbox.mapbox-traffic-v1',\n    'source-layer': 'traffic',\n    'minzoom': 6,\n    'filter': [\n      'all',\n      [\n        '==',\n        '$type',\n        'LineString'\n      ],\n      [\n        'all',\n        [\n          'has',\n          'congestion'\n        ],\n        [\n          'in',\n          'class',\n          'secondary',\n          'tertiary'\n        ]\n      ]\n    ],\n    'layout': {\n      'visibility': 'visible',\n      'line-join': 'round',\n      'line-cap': 'round'\n    },\n    'paint': {\n      'line-width': {\n        'base': 1.5,\n        'stops': [\n          [\n            9,\n            1.5\n          ],\n          [\n            18,\n            11\n          ],\n          [\n            20,\n            16.5\n          ]\n        ]\n      },\n      'line-color': {\n        'base': 1,\n        'type': 'categorical',\n        'property': 'congestion',\n        'stops': [\n          [\n            'low',\n            'hsl(145, 95%, 30%)'\n          ],\n          [\n            'moderate',\n            'hsl(30, 100%, 42%)'\n          ],\n          [\n            'heavy',\n            'hsl(355, 100%, 37%)'\n          ],\n          [\n            'severe',\n            'hsl(355, 70%, 22%)'\n          ]\n        ]\n      },\n      'line-offset': {\n        'base': 1.5,\n        'stops': [\n          [\n            10,\n            0.5\n          ],\n          [\n            15,\n            5\n          ],\n          [\n            18,\n            11\n          ],\n          [\n            20,\n            14.5\n          ]\n        ]\n      },\n      'line-opacity': {\n        'base': 1,\n        'stops': [\n          [\n            13,\n            0\n          ],\n          [\n            14,\n            1\n          ]\n        ]\n      }\n    }\n  },\n  {\n    'id': 'traffic-primary-bg',\n    'type': 'line',\n    'metadata': {\n      'mapbox:group': '4053de47c16e55481b10fd748eaa994c'\n    },\n    'source': 'mapbox://mapbox.mapbox-traffic-v1',\n    'source-layer': 'traffic',\n    'minzoom': 6,\n    'filter': [\n      'all',\n      [\n        '==',\n        '$type',\n        'LineString'\n      ],\n      [\n        'all',\n        [\n          '==',\n          'class',\n          'primary'\n        ],\n        [\n          'has',\n          'congestion'\n        ]\n      ]\n    ],\n    'layout': {\n      'visibility': 'visible',\n      'line-join': 'round',\n      'line-cap': 'round'\n    },\n    'paint': {\n      'line-width': {\n        'base': 1.5,\n        'stops': [\n          [\n            10,\n            0.75\n          ],\n          [\n            15,\n            6\n          ],\n          [\n            20,\n            18\n          ]\n        ]\n      },\n      'line-color': {\n        'base': 1,\n        'type': 'categorical',\n        'property': 'congestion',\n        'stops': [\n          [\n            'low',\n            'hsl(145, 95%, 30%)'\n          ],\n          [\n            'moderate',\n            'hsl(30, 100%, 42%)'\n          ],\n          [\n            'heavy',\n            'hsl(355, 100%, 37%)'\n          ],\n          [\n            'severe',\n            'hsl(355, 70%, 22%)'\n          ]\n        ]\n      },\n      'line-offset': {\n        'base': 1.2,\n        'stops': [\n          [\n            10,\n            0\n          ],\n          [\n            12,\n            1.5\n          ],\n          [\n            18,\n            13\n          ],\n          [\n            20,\n            16\n          ]\n        ]\n      },\n      'line-opacity': {\n        'base': 1,\n        'stops': [\n          [\n            11,\n            0\n          ],\n          [\n            12,\n            1\n          ]\n        ]\n      }\n    }\n  },\n  {\n    'id': 'traffic-trunk-bg',\n    'type': 'line',\n    'metadata': {\n      'mapbox:group': '4053de47c16e55481b10fd748eaa994c'\n    },\n    'source': 'mapbox://mapbox.mapbox-traffic-v1',\n    'source-layer': 'traffic',\n    'minzoom': 6,\n    'filter': [\n      'all',\n      [\n        '==',\n        '$type',\n        'LineString'\n      ],\n      [\n        'all',\n        [\n          '==',\n          'class',\n          'trunk'\n        ],\n        [\n          'has',\n          'congestion'\n        ]\n      ]\n    ],\n    'layout': {\n      'visibility': 'visible',\n      'line-join': 'round',\n      'line-cap': 'round'\n    },\n    'paint': {\n      'line-width': {\n        'base': 1.5,\n        'stops': [\n          [\n            8,\n            0.5\n          ],\n          [\n            9,\n            2.25\n          ],\n          [\n            18,\n            13\n          ],\n          [\n            20,\n            17.5\n          ]\n        ]\n      },\n      'line-color': {\n        'base': 1,\n        'type': 'categorical',\n        'property': 'congestion',\n        'stops': [\n          [\n            'low',\n            'hsl(145, 95%, 30%)'\n          ],\n          [\n            'moderate',\n            'hsl(30, 100%, 42%)'\n          ],\n          [\n            'heavy',\n            'hsl(355, 100%, 37%)'\n          ],\n          [\n            'severe',\n            'hsl(355, 70%, 22%)'\n          ]\n        ]\n      },\n      'line-offset': {\n        'base': 1.5,\n        'stops': [\n          [\n            7,\n            0\n          ],\n          [\n            9,\n            1\n          ],\n          [\n            18,\n            13\n          ],\n          [\n            20,\n            18\n          ]\n        ]\n      },\n      'line-opacity': 1\n    }\n  },\n  {\n    'id': 'traffic-motorway-bg',\n    'type': 'line',\n    'metadata': {\n      'mapbox:group': '4053de47c16e55481b10fd748eaa994c'\n    },\n    'source': 'mapbox://mapbox.mapbox-traffic-v1',\n    'source-layer': 'traffic',\n    'minzoom': 6,\n    'filter': [\n      'all',\n      [\n        '==',\n        '$type',\n        'LineString'\n      ],\n      [\n        'all',\n        [\n          '==',\n          'class',\n          'motorway'\n        ],\n        [\n          'has',\n          'congestion'\n        ]\n      ]\n    ],\n    'layout': {\n      'visibility': 'visible',\n      'line-join': 'round',\n      'line-cap': 'round'\n    },\n    'paint': {\n      'line-width': {\n        'base': 1.5,\n        'stops': [\n          [\n            6,\n            0.5\n          ],\n          [\n            9,\n            3\n          ],\n          [\n            18,\n            16\n          ],\n          [\n            20,\n            20\n          ]\n        ]\n      },\n      'line-color': {\n        'base': 1,\n        'type': 'categorical',\n        'property': 'congestion',\n        'stops': [\n          [\n            'low',\n            'hsl(145, 95%, 30%)'\n          ],\n          [\n            'moderate',\n            'hsl(30, 100%, 42%)'\n          ],\n          [\n            'heavy',\n            'hsl(355, 100%, 37%)'\n          ],\n          [\n            'severe',\n            'hsl(355, 70%, 22%)'\n          ]\n        ]\n      },\n      'line-opacity': 1,\n      'line-offset': {\n        'base': 1.5,\n        'stops': [\n          [\n            7,\n            0\n          ],\n          [\n            9,\n            1.2\n          ],\n          [\n            11,\n            1.2\n          ],\n          [\n            18,\n            10\n          ],\n          [\n            20,\n            15.5\n          ]\n        ]\n      }\n    }\n  },\n  {\n    'id': 'traffic-primary',\n    'metadata': {\n      'mapbox:group': '4053de47c16e55481b10fd748eaa994c'\n    },\n    'ref': 'traffic-primary-bg',\n    'paint': {\n      'line-width': {\n        'base': 1.5,\n        'stops': [\n          [\n            10,\n            1\n          ],\n          [\n            15,\n            4\n          ],\n          [\n            20,\n            16\n          ]\n        ]\n      },\n      'line-color': {\n        'base': 1,\n        'type': 'categorical',\n        'property': 'congestion',\n        'stops': [\n          [\n            'low',\n            'hsl(142, 55%, 50%)'\n          ],\n          [\n            'moderate',\n            'hsl(30, 100%, 55%)'\n          ],\n          [\n            'heavy',\n            'hsl(355, 100%, 50%)'\n          ],\n          [\n            'severe',\n            'hsl(355, 70%, 35%)'\n          ]\n        ]\n      },\n      'line-offset': {\n        'base': 1.2,\n        'stops': [\n          [\n            10,\n            0\n          ],\n          [\n            12,\n            1.5\n          ],\n          [\n            18,\n            13\n          ],\n          [\n            20,\n            16\n          ]\n        ]\n      },\n      'line-opacity': 1\n    }\n  },\n  {\n    'id': 'traffic-secondary-tertiary',\n    'metadata': {\n      'mapbox:group': '4053de47c16e55481b10fd748eaa994c'\n    },\n    'ref': 'traffic-secondary-tertiary-bg',\n    'paint': {\n      'line-width': {\n        'base': 1.5,\n        'stops': [\n          [\n            9,\n            0.5\n          ],\n          [\n            18,\n            9\n          ],\n          [\n            20,\n            14\n          ]\n        ]\n      },\n      'line-color': {\n        'base': 1,\n        'type': 'categorical',\n        'property': 'congestion',\n        'stops': [\n          [\n            'low',\n            'hsl(142, 55%, 50%)'\n          ],\n          [\n            'moderate',\n            'hsl(30, 100%, 55%)'\n          ],\n          [\n            'heavy',\n            'hsl(355, 100%, 50%)'\n          ],\n          [\n            'severe',\n            'hsl(355, 70%, 35%)'\n          ]\n        ]\n      },\n      'line-offset': {\n        'base': 1.5,\n        'stops': [\n          [\n            10,\n            0.5\n          ],\n          [\n            15,\n            5\n          ],\n          [\n            18,\n            11\n          ],\n          [\n            20,\n            14.5\n          ]\n        ]\n      },\n      'line-opacity': 1\n    }\n  },\n  {\n    'id': 'traffic-street-link',\n    'metadata': {\n      'mapbox:group': '4053de47c16e55481b10fd748eaa994c'\n    },\n    'ref': 'traffic-street-link-bg',\n    'paint': {\n      'line-width': {\n        'base': 1.5,\n        'stops': [\n          [\n            14,\n            1.5\n          ],\n          [\n            20,\n            13.5\n          ]\n        ]\n      },\n      'line-color': {\n        'base': 1,\n        'type': 'categorical',\n        'property': 'congestion',\n        'stops': [\n          [\n            'low',\n            'hsl(142, 55%, 50%)'\n          ],\n          [\n            'moderate',\n            'hsl(30, 100%, 55%)'\n          ],\n          [\n            'heavy',\n            'hsl(355, 100%, 50%)'\n          ],\n          [\n            'severe',\n            'hsl(355, 70%, 35%)'\n          ]\n        ]\n      },\n      'line-offset': {\n        'base': 1.5,\n        'stops': [\n          [\n            14,\n            2\n          ],\n          [\n            20,\n            18\n          ]\n        ]\n      },\n      'line-opacity': 1\n    }\n  },\n  {\n    'id': 'traffic-trunk',\n    'metadata': {\n      'mapbox:group': '4053de47c16e55481b10fd748eaa994c'\n    },\n    'ref': 'traffic-trunk-bg',\n    'paint': {\n      'line-width': {\n        'base': 1.5,\n        'stops': [\n          [\n            8,\n            0.75\n          ],\n          [\n            18,\n            11\n          ],\n          [\n            20,\n            15\n          ]\n        ]\n      },\n      'line-color': {\n        'base': 1,\n        'type': 'categorical',\n        'property': 'congestion',\n        'stops': [\n          [\n            'low',\n            'hsl(142, 55%, 50%)'\n          ],\n          [\n            'moderate',\n            'hsl(30, 100%, 55%)'\n          ],\n          [\n            'heavy',\n            'hsl(355, 100%, 50%)'\n          ],\n          [\n            'severe',\n            'hsl(355, 70%, 35%)'\n          ]\n        ]\n      },\n      'line-offset': {\n        'base': 1.5,\n        'stops': [\n          [\n            7,\n            0\n          ],\n          [\n            9,\n            1\n          ],\n          [\n            18,\n            13\n          ],\n          [\n            20,\n            18\n          ]\n        ]\n      },\n      'line-opacity': 1\n    }\n  },\n  {\n    'id': 'traffic-motorway',\n    'metadata': {\n      'mapbox:group': '4053de47c16e55481b10fd748eaa994c'\n    },\n    'ref': 'traffic-motorway-bg',\n    'paint': {\n      'line-width': {\n        'base': 1.5,\n        'stops': [\n          [\n            6,\n            0.5\n          ],\n          [\n            9,\n            1.5\n          ],\n          [\n            18,\n            14\n          ],\n          [\n            20,\n            18\n          ]\n        ]\n      },\n      'line-color': {\n        'base': 1,\n        'type': 'categorical',\n        'property': 'congestion',\n        'stops': [\n          [\n            'low',\n            'hsl(142, 55%, 50%)'\n          ],\n          [\n            'moderate',\n            'hsl(30, 100%, 55%)'\n          ],\n          [\n            'heavy',\n            'hsl(355, 100%, 50%)'\n          ],\n          [\n            'severe',\n            'hsl(355, 70%, 35%)'\n          ]\n        ]\n      },\n      'line-opacity': 1,\n      'line-offset': {\n        'base': 1.5,\n        'stops': [\n          [\n            7,\n            0\n          ],\n          [\n            9,\n            1.2\n          ],\n          [\n            11,\n            1.2\n          ],\n          [\n            18,\n            10\n          ],\n          [\n            20,\n            15.5\n          ]\n        ]\n      }\n    }\n  }\n];\n\nfunction addLayers(style, layers, before) {\n  for (var i = 0; i < style.layers.length; i++) {\n    var layer = style.layers[i];\n    if (before === layer.id) {\n      var newLayers = style.layers.slice(0, i).concat(layers).concat(style.layers.slice(i));\n      return Object.assign({ }, style, {\n        layers: newLayers\n      });\n    }\n  }\n  return style;\n}\n\n/**\n * Create a new [Mapbox GL JS plugin](https://www.mapbox.com/blog/build-mapbox-gl-js-plugins/) that allows you to hide and show\n * traffic layers in your map and an optional toggle button.\n * @constructor\n * @param {object} options - Options to configure the plugin.\n * @param {boolean} [options.showTraffic=false] - Show or hide traffic overlay by default.\n * @param {boolean} [options.showTrafficButton=true] - Show a toggle button to turn traffic on and off.\n * @param {RegExp} [options.trafficSource=/mapbox-traffic-v\\d/] - The traffic source regex used to determine whether a layer displays traffic or not.\n */\nfunction MapboxTraffic(options) {\n  if (!(this instanceof MapboxTraffic)) {\n    throw new Error('MapboxTraffic needs to be called with the new keyword');\n  }\n\n  this.options = Object.assign({\n    showTraffic: false,\n    showTrafficButton: true,\n    trafficSource: /mapbox-traffic-v\\d/\n  }, options);\n\n  this.render = this.render.bind(this);\n  this.toggleTraffic = this.toggleTraffic.bind(this);\n  this._hideTraffic = this._hideTraffic.bind(this);\n  this._showTraffic = this._showTraffic.bind(this);\n  this._hasTraffic = this._hasTraffic.bind(this);\n  this._toggle = new TrafficButton({\n    show: this.options.showTrafficButton,\n    onToggle: this.toggleTraffic.bind(this)\n  });\n}\n\nMapboxTraffic.prototype._hasTraffic = function () {\n  var style = this._map.getStyle();\n  var trafficSource = this.options.trafficSource;\n  return Object.keys(style.sources).filter(function (sourceName) {\n    return trafficSource.test(sourceName);\n  }).length > 0;\n};\n\nMapboxTraffic.prototype.toggleTraffic = function () {\n  this.options.showTraffic = !this.options.showTraffic;\n  this.render();\n};\n\nMapboxTraffic.prototype.render = function () {\n  if (!this._hasTraffic()) {\n    this._map.addSource('mapbox://mapbox.mapbox-traffic-v1', {\n      type: 'vector',\n      url: 'mapbox://mapbox.mapbox-traffic-v1'\n    });\n\n    var roadLayers = this._map.getStyle().layers.filter(function (layer) {\n      return layer['source-layer'] === 'road';\n    });\n    var topRoadLayer = roadLayers[roadLayers.length - 1].id;\n    var style = this._map.getStyle();\n    var trafficStyle = addLayers(style, trafficLayers, topRoadLayer);\n    this._map.setStyle(trafficStyle);\n  }\n\n  if (this.options.showTraffic) {\n    this._showTraffic();\n    this._toggle.setMapIcon();\n  } else {\n    this._hideTraffic();\n    this._toggle.setTrafficIcon();\n  }\n};\n\nMapboxTraffic.prototype._hideTraffic = function () {\n  var style = this._map.getStyle();\n  var source = this.options.trafficSource;\n  style.layers.forEach(function (layer) {\n    if (source.test(layer['source'])) {\n      layer['layout'] = layer['layout'] || {};\n      layer['layout']['visibility'] = 'none';\n    }\n  });\n  this._map.setStyle(style);\n};\n\nMapboxTraffic.prototype._showTraffic = function () {\n  var style = this._map.getStyle();\n  var source = this.options.trafficSource;\n  style.layers.forEach(function (layer) {\n    if (source.test(layer['source'])) {\n      layer['layout'] = layer['layout'] || {};\n      layer['layout']['visibility'] = 'visible';\n    }\n  });\n  this._map.setStyle(style);\n};\n\nMapboxTraffic.prototype.onAdd = function (map) {\n  this._map = map;\n  map.on('load', this.render);\n  return this._toggle.elem;\n};\n\nMapboxTraffic.prototype.onRemove = function () {\n  this._map.off('load', this.render);\n\n  var elem = this._toggle.elem;\n  elem.parentNode.removeChild(elem);\n  this._map = undefined;\n};\n\nfunction container(child, show) {\n  var container = document.createElement('div');\n  container.className = 'mapboxgl-ctrl mapboxgl-ctrl-group';\n  container.appendChild(child);\n  if (!show) {\n    container.style.display = 'none';\n  }\n  return container;\n}\n\nfunction button() {\n  var btn = document.createElement('button');\n  btn.className = 'mapboxgl-ctrl-icon mapboxgl-ctrl-traffic';\n  btn.type = 'button';\n  btn['aria-label'] = 'Inspect';\n  return btn;\n}\n\nfunction TrafficButton(options) {\n  options = Object.assign({\n    show: true,\n    onToggle: function () {}\n  }, options);\n\n  this._btn = button();\n  this._btn.onclick = options.onToggle;\n  this.elem = container(this._btn, options.show);\n}\n\nTrafficButton.prototype.setTrafficIcon = function () {\n  this._btn.className = 'mapboxgl-ctrl-icon mapboxgl-ctrl-traffic';\n};\n\nTrafficButton.prototype.setMapIcon = function () {\n  this._btn.className = 'mapboxgl-ctrl-icon mapboxgl-ctrl-map';\n};\n\nif (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = MapboxTraffic;\n} else {\n  window.MapboxTraffic = MapboxTraffic;\n}\n","// @flow\nimport { PureComponent, createElement } from 'react';\nimport type MapboxMap from 'mapbox-gl/src/ui/map';\nimport type MapboxTrafficControl from '@mapbox/mapbox-gl-traffic';\n\nimport MapboxTraffic from '@mapbox/mapbox-gl-traffic';\nimport MapContext from '../MapContext';\n\ntype Props = {\n  /** Show or hide traffic overlay by default. */\n  showTraffic?: Boolean,\n\n  /** Show a toggle button to turn traffic on and off. */\n  showTrafficButton?: Boolean,\n\n  /**\n   * The traffic source regex used to determine whether a layer displays\n   * traffic or not\n   * */\n  trafficSource?: RegExp\n};\n\n/** Add a traffic toggle control. */\nclass TrafficControl extends PureComponent<Props> {\n  _map: MapboxMap;\n\n  _control: MapboxTrafficControl;\n\n  static defaultProps = {\n    showTraffic: false,\n    showTrafficButton: true,\n    trafficSource: /mapbox-traffic-v\\d/\n  };\n\n  componentDidMount() {\n    this._addControl();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.showTraffic !== this.props.showTraffic) {\n      this._control.toggleTraffic();\n    }\n\n    const shouldUpdate =\n      prevProps.showTrafficButton !== this.props.showTrafficButton ||\n      prevProps.trafficSource !== this.props.trafficSource;\n\n    if (shouldUpdate) {\n      this._map.removeControl(this._control);\n\n      this._addControl();\n    }\n  }\n\n  componentWillUnmount() {\n    if (!this._map || !this._map.getStyle()) {\n      return;\n    }\n\n    this._map.removeControl(this._control);\n  }\n\n  _addControl = () => {\n    const { showTraffic, showTrafficButton, trafficSource } = this.props;\n\n    const control = new MapboxTraffic({\n      showTraffic,\n      showTrafficButton,\n      trafficSource\n    });\n\n    this._map.addControl(control);\n    this._control = control;\n  };\n\n  getControl() {\n    return this._control;\n  }\n\n  render() {\n    return createElement(MapContext.Consumer, {}, (map) => {\n      if (map) {\n        this._map = map;\n      }\n      return null;\n    });\n  }\n}\n\nexport default TrafficControl;\n","// @flow\n\nimport { PureComponent, createElement } from 'react';\nimport type MapboxMap from 'mapbox-gl/src/ui/map';\nimport type { FilterSpecification } from 'mapbox-gl/src/style-spec/types';\n\nimport MapContext from '../MapContext';\nimport isArraysEqual from '../../utils/isArraysEqual';\n\ntype Props = {|\n  /** Mapbox GL Layer id */\n  layerId: string,\n  /**\n   * The filter, conforming to the Mapbox Style Specification's\n   * filter definition. (see https://docs.mapbox.com/mapbox-gl-js/style-spec/#other-filter)\n   * If null or undefined is provided, the function removes any existing filter\n   * from the layer.\n   * */\n  filter: FilterSpecification,\n\n  /**\n   * Whether to check if the filter conforms to the Mapbox GL\n   * Style Specification. Disabling validation is a performance optimization\n   * that should only be used if you have previously validated the values you\n   * will be passing to this function.\n   * */\n  validate?: boolean\n|};\n\nclass Filter extends PureComponent<Props> {\n  _map: MapboxMap;\n\n  static defaultProps = {\n    validate: true\n  };\n\n  componentDidMount() {\n    this._setFilter();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const prevFilter = prevProps.filter;\n    const prevValidate = prevProps.validate;\n    const { filter, validate } = this.props;\n\n    const shouldUpdate =\n      !isArraysEqual(prevFilter, filter) || prevValidate !== validate;\n\n    if (shouldUpdate) {\n      this._setFilter();\n    }\n  }\n\n  componentWillUnmount() {\n    if (!this._map || !this._map.getStyle()) {\n      return;\n    }\n    const { layerId } = this.props;\n    const targetLayer = this._map.getLayer(layerId);\n\n    if (targetLayer === undefined) {\n      return;\n    }\n\n    this._map.setFilter(layerId, undefined);\n  }\n\n  _setFilter() {\n    const { layerId, filter, validate } = this.props;\n    const targetLayer = this._map.getLayer(layerId);\n\n    if (targetLayer === undefined) {\n      return;\n    }\n\n    if (!Array.isArray(filter)) {\n      this._map.setFilter(layerId, undefined);\n    } else {\n      this._map.setFilter(layerId, filter, { validate });\n    }\n  }\n\n  render() {\n    return createElement(MapContext.Consumer, {}, (map) => {\n      if (map) {\n        this._map = map;\n      }\n\n      return null;\n    });\n  }\n}\n\nexport default Filter;\n"],"names":["MapContext","createContext","window","document","map","module","string","charAt","toUpperCase","slice","isArraysEqual","arr1","arr2","length","index","diff","newProps","prevProps","keys","Set","Object","_toConsumableArray","reduce","acc","key","value","push","queryRenderedFeatures","layerId","position","radius","parameters","layers","bbox","eventListeners","Layer","PureComponent","props","_this","_map","before","onClick","onHover","onEnter","onLeave","layer","getLayer","addLayer","_addEventListeners","forEach","propName","eventName","handlerName","on","_id","off","event","point","x","y","features","id","_addLayer","this","type","source","removeLayer","moveLayer","paint","setPaintProperty","_this2","layout","setLayoutProperty","filter","setFilter","undefined","_updateEventListeners","getStyle","_removeEventListeners","createElement","Consumer","_this3","CustomLayer","LayerLikeTypes","isLayerLike","child","includes","forEachLayer","fn","children","Children","getLayerIds","layerIds","getLayerId","MapGL","loaded","originalEvent","getCenter","lng","viewport","latitude","lat","longitude","zoom","getZoom","pitch","getPitch","bearing","getBearing","onViewportChange","mapboxgl","accessToken","_container","createRef","container","current","Map","style","mapStyle","interactive","center","minZoom","maxZoom","hash","bearingSnap","pitchWithRotate","attributionControl","logoPosition","failIfMajorPerformanceCaveat","preserveDrawingBuffer","antialias","refreshExpiredTiles","maxBounds","bounds","scrollZoom","boxZoom","dragRotate","dragPan","keyboard","doubleClickZoom","trackResize","renderWorldCopies","maxTileCacheSize","localIdeographFontFamily","transformRequest","collectResourceTiming","fadeDuration","crossSourceCollisions","locale","once","setState","onLoad","_onViewportChange","events","capitalizeFirstLetter","prop","Array","isArray","cursorStyle","getCanvas","cursor","showTileBoundaries","_updateMapViewport","_updateMapStyle","_updateMapSize","_updateMapEventListeners","remove","prevEventHandler","newEventHandler","newMapStyle","prevMapStyle","_this4","setStyle","viewportChangeMethod","options","viewportChangeOptions","flyTo","jumpTo","easeTo","Error","height","width","resize","state","className","shift","traverse","_children","cloneElement","normalizeChildren","Provider","ref","Source","isSourceLoaded","_onSourceData","prevSource","newSource","data","getSource","setData","url","coordinates","updateImage","tiles","_tileJSONRequest","cancel","scheme","_options","sourceCache","sourceCaches","clearTiles","load","removeSource","restSourceProps","validateSource","addSource","prevId","prevSourceProps","_updateTileSource","_updateImageSource","_updateGeoJSONSource","_removeSource","Popup","_el","offset","closeButton","closeOnClick","onClose","anchor","maxWidth","_popup","setDOMContent","setLngLat","addTo","createPortal","Marker","onDragEnd","_marker","getLngLat","onDragStart","onDrag","element","draggable","rotation","pitchAlignment","rotationAlignment","addEventListener","_onDragEnd","_onDragStart","_onDrag","removeEventListener","FeatureState","sourceLayer","setFeatureState","removeFeatureState","Image","image","callback","loadImage","error","pixelRatio","sdf","_loadImage","addImage","removeImage","hasImage","AttributionControl","compact","customAttribution","control","addControl","_control","removeControl","FullscreenControl","GeolocateControl","positionOptions","fitBoundsOptions","trackUserLocation","showUserLocation","onTrackUserLocationEnd","onTrackUserLocationStart","onError","onGeolocate","enableHighAccuracy","timeout","NavigationControl","showCompass","showZoom","visualizePitch","ScaleControl","unit","MapboxLanguage","assign","setLanguage","bind","_initialStyleUpdate","_defaultLanguage","defaultLanguage","_isLanguageField","languageField","_getLanguageField","getLanguageField","language","_languageSource","languageSource","_languageTransform","languageTransform","changedLayers","spacing","noSpacing","test","standardSpacing","_excludedLayerIds","excludedLayerIds","supportedLanguages","adaptPropertyLanguage","isLangField","property","languageFieldName","isNameStringField","stops","stop","isNameFunctionField","newStops","prototype","indexOf","streetsSource","sources","sourceName","findStreetsSource","field","changeLayerTextProperty","languageStyle","navigator","languages","userLanguage","parts","split","languageCode","browserLanguage","onAdd","onRemove","LanguageControl","_setLanguage","trafficLayers","MapboxTraffic","showTraffic","showTrafficButton","trafficSource","render","toggleTraffic","_hideTraffic","_showTraffic","_hasTraffic","_toggle","TrafficButton","show","onToggle","btn","_btn","onclick","elem","appendChild","display","roadLayers","topRoadLayer","trafficStyle","i","newLayers","concat","addLayers","setMapIcon","setTrafficIcon","parentNode","removeChild","TrafficControl","_addControl","Filter","_setFilter","prevFilter","prevValidate","validate"],"mappings":"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F,CACE,KACA,QACA,YACA,qBAII,YACM,sBACD,mBACD,eAEL,cACO,MACJ,UACC,CACP,CACE,EACA,KAEF,CACE,GACA,IAEF,CACE,GACA,qBAIQ,MACJ,OACA,uBACI,mBACH,CACP,CACE,MACA,sBAEF,CACE,WACA,sBAEF,CACE,QACA,uBAEF,CACE,SACA,sCAIS,MACL,UACC,CACP,CACE,GACA,IAEF,CACE,GACA,GAEF,CACE,GACA,IAEF,CACE,GACA,uBAIU,MACN,QACC,CACP,CACE,GACA,GAEF,CACE,GACA,OAMV,IACQ,0BACE,gBACI,gBACM,2CAER,mDACM,kBACL,SACD,CACR,MACA,CACE,KACA,QACA,cAEF,CACE,MACA,CACE,KACA,QACA,WAEF,CACE,MACA,uBAII,YACM,sBACD,mBACD,eAEL,cACO,MACJ,UACC,CACP,CACE,GACA,KAEF,CACE,GACA,GAEF,CACE,GACA,mBAIQ,MACJ,OACA,uBACI,mBACH,CACP,CACE,MACA,sBAEF,CACE,WACA,sBAEF,CACE,QACA,uBAEF,CACE,SACA,sCAIS,MACL,UACC,CACP,CACE,GACA,GAEF,CACE,GACA,KAEF,CACE,GACA,IAEF,CACE,GACA,qBAIU,MACN,QACC,CACP,CACE,GACA,GAEF,CACE,GACA,OAMV,IACQ,wBACE,gBACI,gBACM,2CAER,mDACM,kBACL,SACD,CACR,MACA,CACE,KACA,QACA,cAEF,CACE,MACA,CACE,KACA,QACA,SAEF,CACE,MACA,uBAII,YACM,sBACD,mBACD,eAEL,cACO,MACJ,UACC,CACP,CACE,EACA,IAEF,CACE,EACA,MAEF,CACE,GACA,IAEF,CACE,GACA,qBAIQ,MACJ,OACA,uBACI,mBACH,CACP,CACE,MACA,sBAEF,CACE,WACA,sBAEF,CACE,QACA,uBAEF,CACE,SACA,sCAIS,MACL,UACC,CACP,CACE,EACA,GAEF,CACE,EACA,GAEF,CACE,GACA,IAEF,CACE,GACA,qBAIU,IAGpB,IACQ,2BACE,gBACI,gBACM,2CAER,mDACM,kBACL,SACD,CACR,MACA,CACE,KACA,QACA,cAEF,CACE,MACA,CACE,KACA,QACA,YAEF,CACE,MACA,uBAII,YACM,sBACD,mBACD,eAEL,cACO,MACJ,UACC,CACP,CACE,EACA,IAEF,CACE,EACA,GAEF,CACE,GACA,IAEF,CACE,GACA,mBAIQ,MACJ,OACA,uBACI,mBACH,CACP,CACE,MACA,sBAEF,CACE,WACA,sBAEF,CACE,QACA,uBAEF,CACE,SACA,uCAIU,gBACD,MACL,UACC,CACP,CACE,EACA,GAEF,CACE,EACA,KAEF,CACE,GACA,KAEF,CACE,GACA,IAEF,CACE,GACA,UAMV,IACQ,2BACM,gBACM,wCAEX,2BACE,cACO,MACJ,UACC,CACP,CACE,GACA,GAEF,CACE,GACA,GAEF,CACE,GACA,mBAIQ,MACJ,OACA,uBACI,mBACH,CACP,CACE,MACA,sBAEF,CACE,WACA,sBAEF,CACE,QACA,uBAEF,CACE,SACA,sCAIS,MACL,UACC,CACP,CACE,GACA,GAEF,CACE,GACA,KAEF,CACE,GACA,IAEF,CACE,GACA,qBAIU,IAGpB,IACQ,sCACM,gBACM,wCAEX,sCACE,cACO,MACJ,UACC,CACP,CACE,EACA,IAEF,CACE,GACA,GAEF,CACE,GACA,mBAIQ,MACJ,OACA,uBACI,mBACH,CACP,CACE,MACA,sBAEF,CACE,WACA,sBAEF,CACE,QACA,uBAEF,CACE,SACA,sCAIS,MACL,UACC,CACP,CACE,GACA,IAEF,CACE,GACA,GAEF,CACE,GACA,IAEF,CACE,GACA,uBAIU,IAGpB,IACQ,+BACM,gBACM,wCAEX,+BACE,cACO,MACJ,UACC,CACP,CACE,GACA,KAEF,CACE,GACA,qBAIQ,MACJ,OACA,uBACI,mBACH,CACP,CACE,MACA,sBAEF,CACE,WACA,sBAEF,CACE,QACA,uBAEF,CACE,SACA,sCAIS,MACL,UACC,CACP,CACE,GACA,GAEF,CACE,GACA,qBAIU,IAGpB,IACQ,yBACM,gBACM,wCAEX,yBACE,cACO,MACJ,UACC,CACP,CACE,EACA,KAEF,CACE,GACA,IAEF,CACE,GACA,mBAIQ,MACJ,OACA,uBACI,mBACH,CACP,CACE,MACA,sBAEF,CACE,WACA,sBAEF,CACE,QACA,uBAEF,CACE,SACA,sCAIS,MACL,UACC,CACP,CACE,EACA,GAEF,CACE,EACA,GAEF,CACE,GACA,IAEF,CACE,GACA,qBAIU,IAGpB,IACQ,4BACM,gBACM,wCAEX,4BACE,cACO,MACJ,UACC,CACP,CACE,EACA,IAEF,CACE,EACA,KAEF,CACE,GACA,IAEF,CACE,GACA,mBAIQ,MACJ,OACA,uBACI,mBACH,CACP,CACE,MACA,sBAEF,CACE,WACA,sBAEF,CACE,QACA,uBAEF,CACE,SACA,uCAIU,gBACD,MACL,UACC,CACP,CACE,EACA,GAEF,CACE,EACA,KAEF,CACE,GACA,KAEF,CACE,GACA,IAEF,CACE,GACA,WA8BZ,SAASC,EAAc3K,QACf/G,gBAAgB0R,SACd,IAAItK,MAAM,8DAGbL,QAAU1J,OAAOgR,OAAO,CAC3BsD,aAAa,EACbC,mBAAmB,EACnBC,cAAe,sBACd9K,QAEE+K,OAAS9R,KAAK8R,OAAOvD,KAAKvO,WAC1B+R,cAAgB/R,KAAK+R,cAAcxD,KAAKvO,WACxCgS,aAAehS,KAAKgS,aAAazD,KAAKvO,WACtCiS,aAAejS,KAAKiS,aAAa1D,KAAKvO,WACtCkS,YAAclS,KAAKkS,YAAY3D,KAAKvO,WACpCmS,QAAU,IAAIC,EAAc,CAC/BC,KAAMrS,KAAK+G,QAAQ6K,kBACnBU,SAAUtS,KAAK+R,cAAcxD,KAAKvO,QAkGtC,SAASoS,EAAcrL,GARvB,IACMwL,EAQJxL,EAAU1J,OAAOgR,OAAO,CACtBgE,MAAM,EACNC,SAAU,cACTvL,QAEEyL,OAbDD,EAAMnW,SAAS4E,cAAc,WAC7ByG,UAAY,2CAChB8K,EAAItS,KAAO,SACXsS,EAAI,cAAgB,UACbA,QAUFC,KAAKC,QAAU1L,EAAQuL,cACvBI,KA1BP,SAAmBpR,EAAO+Q,OACpBlP,EAAY/G,SAAS4E,cAAc,cACvCmC,EAAUsE,UAAY,oCACtBtE,EAAUwP,YAAYrR,GACjB+Q,IACHlP,EAAUG,MAAMsP,QAAU,QAErBzP,EAmBKA,CAAUnD,KAAKwS,KAAMzL,EAAQsL,MAtG3CX,EAAcrB,UAAU6B,YAAc,eAChC5O,EAAQtD,KAAKxB,KAAKsC,WAClB+Q,EAAgB7R,KAAK+G,QAAQ8K,qBAC1BxU,OAAOF,KAAKmG,EAAMkN,SAAS9P,QAAO,SAAU+P,UAC1CoB,EAActC,KAAKkB,MACzB3T,OAAS,GAGd4U,EAAcrB,UAAU0B,cAAgB,gBACjChL,QAAQ4K,aAAe3R,KAAK+G,QAAQ4K,iBACpCG,UAGPJ,EAAcrB,UAAUyB,OAAS,eAC1B9R,KAAKkS,cAAe,MAClB1T,KAAKgL,UAAU,oCAAqC,CACvDvJ,KAAM,SACNwI,IAAK,0CAGHoK,EAAa7S,KAAKxB,KAAKsC,WAAW7C,OAAOyC,QAAO,SAAU5B,SAC3B,SAA1BA,EAAM,mBAEXgU,EAAeD,EAAWA,EAAW/V,OAAS,GAAGgD,GAEjDiT,EArER,SAAmBzP,EAAOrF,EAAQQ,OAC3B,IAAIuU,EAAI,EAAGA,EAAI1P,EAAMrF,OAAOnB,OAAQkW,OAEnCvU,IADQ6E,EAAMrF,OAAO+U,GACJlT,GAAI,KACnBmT,EAAY3P,EAAMrF,OAAOvB,MAAM,EAAGsW,GAAGE,OAAOjV,GAAQiV,OAAO5P,EAAMrF,OAAOvB,MAAMsW,WAC3E3V,OAAOgR,OAAO,GAAK/K,EAAO,CAC/BrF,OAAQgV,WAIP3P,EA2Dc6P,CADPnT,KAAKxB,KAAKsC,WACc2Q,EAAeqB,QAC9CtU,KAAKqI,SAASkM,GAGjB/S,KAAK+G,QAAQ4K,kBACVM,oBACAE,QAAQiB,oBAERpB,oBACAG,QAAQkB,mBAIjB3B,EAAcrB,UAAU2B,aAAe,eACjC1O,EAAQtD,KAAKxB,KAAKsC,WAClBZ,EAASF,KAAK+G,QAAQ8K,cAC1BvO,EAAMrF,OAAOiB,SAAQ,SAAUJ,GACzBoB,EAAOqP,KAAKzQ,EAAK,UACnBA,EAAK,OAAaA,EAAK,QAAc,GACrCA,EAAK,OAAL,WAAgC,gBAG/BN,KAAKqI,SAASvD,IAGrBoO,EAAcrB,UAAU4B,aAAe,eACjC3O,EAAQtD,KAAKxB,KAAKsC,WAClBZ,EAASF,KAAK+G,QAAQ8K,cAC1BvO,EAAMrF,OAAOiB,SAAQ,SAAUJ,GACzBoB,EAAOqP,KAAKzQ,EAAK,UACnBA,EAAK,OAAaA,EAAK,QAAc,GACrCA,EAAK,OAAL,WAAgC,mBAG/BN,KAAKqI,SAASvD,IAGrBoO,EAAcrB,UAAUgB,MAAQ,SAAUhV,eACnCmC,KAAOnC,EACZA,EAAIiD,GAAG,OAAQU,KAAK8R,QACb9R,KAAKmS,QAAQO,MAGtBhB,EAAcrB,UAAUiB,SAAW,gBAC5B9S,KAAKgB,IAAI,OAAQQ,KAAK8R,YAEvBY,EAAO1S,KAAKmS,QAAQO,KACxBA,EAAKY,WAAWC,YAAYb,QACvBlU,UAAOoC,GAgCdwR,EAAc/B,UAAUgD,eAAiB,gBAClCb,KAAK/K,UAAY,4CAGxB2K,EAAc/B,UAAU+C,WAAa,gBAC9BZ,KAAK/K,UAAY,wCAItBnL,UAAiBoV,KChgCb8B,mBAAuBnV,iOAuCb,iBAC8CE,EAAKD,MAAvDqT,IAAAA,YAAaC,IAAAA,kBAAmBC,IAAAA,cAElC/E,EAAU,IAAI4E,GAAc,CAChCC,YAAAA,EACAC,kBAAAA,EACAC,cAAAA,MAGGrT,KAAKuO,WAAWD,KAChBE,SAAWF,kDAtClB,gBACO2G,gDAGP,SAAmBvW,GACbA,EAAUyU,cAAgB3R,KAAK1B,MAAMqT,kBAClC3E,SAAS+E,iBAId7U,EAAU0U,oBAAsB5R,KAAK1B,MAAMsT,mBAC3C1U,EAAU2U,gBAAkB7R,KAAK1B,MAAMuT,sBAGlCrT,KAAKyO,cAAcjN,KAAKgN,eAExByG,mDAIT,WACOzT,KAAKxB,MAASwB,KAAKxB,KAAKsC,iBAIxBtC,KAAKyO,cAAcjN,KAAKgN,oCAgB/B,kBACShN,KAAKgN,+BAGd,6BACShM,EAAc/E,EAAWgF,SAAU,IAAI,SAAC5E,UACzCA,IACFkE,EAAK/B,KAAOnC,GAEP,mBA7DPmX,kBAKkB,CACpB7B,aAAa,EACbC,mBAAmB,EACnBC,cAAe,2BCFb6B,mBAAerV,8NAOnB,gBACOsV,+CAGP,SAAmBzW,OACX0W,EAAa1W,EAAUwD,OACvBmT,EAAe3W,EAAU4W,WACF9T,KAAK1B,MAA1BoC,IAAAA,OAAQoT,IAAAA,WAGbnX,EAAciX,EAAYlT,IAAWmT,IAAiBC,SAGlDH,iDAIT,cACO3T,KAAKxB,MAASwB,KAAKxB,KAAKsC,gBAGrBjD,EAAYmC,KAAK1B,MAAjBT,aAGY+C,IAFAZ,KAAKxB,KAAKO,SAASlB,SAMlCW,KAAKmC,UAAU9C,OAAS+C,8BAG/B,iBACwCZ,KAAK1B,MAAnCT,IAAAA,QAAS6C,IAAAA,OAAQoT,IAAAA,cAGLlT,IAFAZ,KAAKxB,KAAKO,SAASlB,KAMlCgI,MAAMC,QAAQpF,QAGZlC,KAAKmC,UAAU9C,EAAS6C,EAAQ,CAAEoT,SAAAA,SAFlCtV,KAAKmC,UAAU9C,OAAS+C,0BAMjC,6BACSI,EAAc/E,EAAWgF,SAAU,IAAI,SAAC5E,UACzCA,IACFkE,EAAK/B,KAAOnC,GAGP,mBA3DPqX,kBAGkB,CACpBI,UAAU"}